{
  "name": "jt-view-exports-svg",
  "displayName": "View Exports SVG",
  "description": "A Visual Studio Code extension that provides a convenient way to view SVG icons exported from JavaScript, JSX, TypeScript, or TSX files. With this extension, you can easily explore and search for SVG icons within your project, making it effortless to find and utilize your icon assets.",
  "keywords": [
    "Visual Studio Code",
    "Extension",
    "SVG icons",
    "React",
    "Javascript",
    "JSX",
    "TypeScript",
    "TSX",
    "Icon management",
    "Icon assets"
  ],
  "private": true,
  "license": "MIT",
  "author": "Jair Torres",
  "publisher": "JairTorres1003",
  "version": "3.1.1",
  "repository": {
    "type": "git",
    "url": "https://github.com/JairTorres1003/JT-View-Exports-SVG.git"
  },
  "bugs": {
    "url": "https://github.com/JairTorres1003/JT-View-Exports-SVG/issues"
  },
  "homepage": "https://github.com/JairTorres1003/JT-View-Exports-SVG#readme",
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "icon": "icon.png",
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "JT-View-Exports-SVG.showMenu",
        "title": "View Exports SVG üîç",
        "icon": {
          "dark": "./assets/JT View Exports SVG - ICON.svg",
          "light": "./assets/JT View Exports SVG - ICON.svg"
        }
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "JT-View-Exports-SVG.showMenu",
          "when": "resourceLangId == javascript || resourceLangId == typescript || resourceLangId == javascriptreact || resourceLangId == typescriptreact"
        }
      ],
      "editor/context": [
        {
          "command": "JT-View-Exports-SVG.showMenu",
          "when": "resourceLangId == javascript || resourceLangId == typescript || resourceLangId == javascriptreact || resourceLangId == typescriptreact"
        }
      ]
    },
    "configuration": [
      {
        "title": "View Exports SVG",
        "properties": {
          "JT-View-Exports-SVG.assetsPath": {
            "type": "array",
            "default": [],
            "description": "An array to store the paths of analyzed files that have SVG icons. This allows for quick access to them from the webview, serving as shortcuts."
          },
          "JT-View-Exports-SVG.hideEmptyFiles": {
            "type": "boolean",
            "default": true,
            "description": "Hide files that do not have any SVG icons exported."
          },
          "JT-View-Exports-SVG.ignoreDirectories": {
            "type": "array",
            "default": [
              ".git",
              ".github",
              ".husky",
              ".idea",
              ".vscode-test",
              ".vscode",
              "build",
              "coverage",
              "dist",
              "node_modules",
              "out"
            ],
            "description": "An array to store the names of directories to ignore when analyzing files for SVG icons.",
            "items": {
              "type": "string"
            }
          }
        }
      }
    ]
  },
  "jest": {
    "testEnvironment": "node",
    "preset": "ts-jest",
    "testMatch": [
      "**/test/**/*.test.ts"
    ],
    "coveragePathIgnorePatterns": [
      "/node_modules/",
      "/webview-ui/"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts"
    ]
  },
  "scripts": {
    "install:all": "npm install && cd webview-ui && npm install",
    "start:webview": "cd webview-ui && npm run dev",
    "build:webview": "cd webview-ui && npm run build",
    "lint:webview": "cd webview-ui && npm run lint",
    "lint:fix:webview": "cd webview-ui && npm run lint:fix",
    "format:check:webview": "cd webview-ui && npm run format:check",
    "format:webview": "cd webview-ui && npm run format",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0 --fix --cache",
    "format:check": "prettier --check \"**/*.{ts,json,md,yml,cjs}\"",
    "format": "prettier --write \"**/*.{ts,json,md,yml,cjs}\"",
    "lint:all": "npm run lint && npm run lint:webview",
    "lint:fix:all": "npm run lint:fix && npm run lint:fix:webview",
    "format:check:all": "npm run format:check && npm run format:check:webview",
    "format:all": "npm run format && npm run format:webview",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "test": "jest --coverage",
    "vscode:prepublish": "npm run compile",
    "prepare": "husky"
  },
  "devDependencies": {
    "@babel/types": "^7.23.5",
    "@types/babel__traverse": "^7.20.4",
    "@types/glob": "^8.1.0",
    "@types/jest": "^29.5.11",
    "@types/lodash": "^4.14.202",
    "@types/node": "^20.10.4",
    "@types/vscode": "^1.80.0",
    "@typescript-eslint/eslint-plugin": "^6.13.2",
    "@typescript-eslint/parser": "^6.13.2",
    "eslint": "^8.55.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-config-standard-with-typescript": "^40.0.0",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^5.0.1",
    "eslint-plugin-promise": "^6.1.1",
    "glob": "^10.3.10",
    "husky": "^9.0.11",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.7",
    "prettier": "^3.1.0",
    "ts-jest": "^29.1.1",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "@babel/parser": "^7.23.5",
    "@babel/traverse": "^7.23.5",
    "color": "^4.2.3",
    "lodash": "^4.17.21"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  }
}
