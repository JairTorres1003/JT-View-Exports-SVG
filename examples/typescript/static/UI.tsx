import React from 'react'

import { type IconComponentProps } from '../types'

export const Edit: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <mask
      id='path-1-outside-1_2165_508'
      maskUnits='userSpaceOnUse'
      x='3'
      y='4'
      width='17'
      height='17'
      fill='black'
    >
      <rect fill='white' x='3' y='4' width='17' height='17' />
      <path d='M13.5858 7.41421L6.39171 14.6083C6.19706 14.8029 6.09974 14.9003 6.03276 15.0186C5.96579 15.1368 5.93241 15.2704 5.86564 15.5374L5.20211 18.1915C5.11186 18.5526 5.06673 18.7331 5.16682 18.8332C5.2669 18.9333 5.44742 18.8881 5.80844 18.7979L5.80845 18.7979L8.46257 18.1344C8.72963 18.0676 8.86316 18.0342 8.98145 17.9672C9.09974 17.9003 9.19706 17.8029 9.39171 17.6083L16.5858 10.4142L16.5858 10.4142C17.2525 9.74755 17.5858 9.41421 17.5858 9C17.5858 8.58579 17.2525 8.25245 16.5858 7.58579L16.4142 7.41421C15.7475 6.74755 15.4142 6.41421 15 6.41421C14.5858 6.41421 14.2525 6.74755 13.5858 7.41421Z' />
    </mask>
    <path
      d='M6.39171 14.6083L7.80593 16.0225L7.80593 16.0225L6.39171 14.6083ZM13.5858 7.41421L12.1716 6L12.1716 6L13.5858 7.41421ZM16.4142 7.41421L15 8.82843L15 8.82843L16.4142 7.41421ZM16.5858 7.58579L18 6.17157L18 6.17157L16.5858 7.58579ZM16.5858 10.4142L18 11.8284L16.5858 10.4142ZM9.39171 17.6083L7.9775 16.1941L7.9775 16.1941L9.39171 17.6083ZM5.86564 15.5374L7.80593 16.0225L7.80593 16.0225L5.86564 15.5374ZM5.20211 18.1915L3.26183 17.7065H3.26183L5.20211 18.1915ZM5.80845 18.7979L5.32338 16.8576L5.23624 16.8794L5.15141 16.9089L5.80845 18.7979ZM8.46257 18.1344L7.97751 16.1941L7.9775 16.1941L8.46257 18.1344ZM5.16682 18.8332L6.58103 17.419L6.58103 17.419L5.16682 18.8332ZM5.80844 18.7979L6.29351 20.7382L6.38065 20.7164L6.46549 20.6869L5.80844 18.7979ZM8.98145 17.9672L7.99605 16.2268L7.99605 16.2268L8.98145 17.9672ZM16.5858 10.4142L18 11.8284L18 11.8284L16.5858 10.4142ZM6.03276 15.0186L4.29236 14.0332L4.29236 14.0332L6.03276 15.0186ZM7.80593 16.0225L15 8.82843L12.1716 6L4.9775 13.1941L7.80593 16.0225ZM15 8.82843L15.1716 9L18 6.17157L17.8284 6L15 8.82843ZM15.1716 9L7.9775 16.1941L10.8059 19.0225L18 11.8284L15.1716 9ZM3.92536 15.0524L3.26183 17.7065L7.1424 18.6766L7.80593 16.0225L3.92536 15.0524ZM6.29352 20.7382L8.94764 20.0746L7.9775 16.1941L5.32338 16.8576L6.29352 20.7382ZM3.26183 17.7065C3.233 17.8218 3.15055 18.1296 3.12259 18.4155C3.0922 18.7261 3.06509 19.5599 3.7526 20.2474L6.58103 17.419C6.84671 17.6847 6.99914 18.0005 7.06644 18.2928C7.12513 18.5478 7.10965 18.7429 7.10358 18.8049C7.09699 18.8724 7.08792 18.904 7.097 18.8631C7.10537 18.8253 7.11788 18.7747 7.1424 18.6766L3.26183 17.7065ZM5.15141 16.9089L5.1514 16.9089L6.46549 20.6869L6.46549 20.6869L5.15141 16.9089ZM5.32338 16.8576C5.22531 16.8821 5.17467 16.8946 5.13694 16.903C5.09595 16.9121 5.12762 16.903 5.19506 16.8964C5.25712 16.8903 5.45223 16.8749 5.70717 16.9336C5.99955 17.0009 6.31535 17.1533 6.58103 17.419L3.7526 20.2474C4.44011 20.9349 5.27387 20.9078 5.58449 20.8774C5.87039 20.8494 6.17822 20.767 6.29351 20.7382L5.32338 16.8576ZM7.9775 16.1941C7.95279 16.2188 7.9317 16.2399 7.91214 16.2593C7.89271 16.2787 7.87671 16.2945 7.86293 16.308C7.84916 16.3215 7.83911 16.3312 7.83172 16.3382C7.82812 16.3416 7.82545 16.3441 7.8236 16.3458C7.82176 16.3475 7.8209 16.3483 7.82092 16.3482C7.82094 16.3482 7.82198 16.3473 7.82395 16.3456C7.82592 16.3439 7.82893 16.3413 7.83291 16.338C7.84086 16.3314 7.85292 16.3216 7.86866 16.3098C7.88455 16.2979 7.90362 16.2843 7.92564 16.2699C7.94776 16.2553 7.97131 16.2408 7.99605 16.2268L9.96684 19.7076C10.376 19.476 10.6864 19.1421 10.8059 19.0225L7.9775 16.1941ZM8.94764 20.0746C9.11169 20.0336 9.55771 19.9393 9.96685 19.7076L7.99605 16.2268C8.02079 16.2128 8.0453 16.2001 8.06917 16.1886C8.09292 16.1772 8.11438 16.1678 8.13277 16.1603C8.15098 16.1529 8.16553 16.1475 8.17529 16.1441C8.18017 16.1424 8.18394 16.1412 8.18642 16.1404C8.1889 16.1395 8.19024 16.1391 8.19026 16.1391C8.19028 16.1391 8.18918 16.1395 8.18677 16.1402C8.18435 16.1409 8.18084 16.1419 8.17606 16.1432C8.16625 16.1459 8.15278 16.1496 8.13414 16.1544C8.11548 16.1593 8.09368 16.1649 8.0671 16.1716C8.04034 16.1784 8.0114 16.1856 7.97751 16.1941L8.94764 20.0746ZM15.1716 9C15.3435 9.17192 15.4698 9.29842 15.5738 9.40785C15.6786 9.518 15.7263 9.57518 15.7457 9.60073C15.7644 9.62524 15.7226 9.57638 15.6774 9.46782C15.6254 9.34332 15.5858 9.18102 15.5858 9H19.5858C19.5858 8.17978 19.2282 7.57075 18.9258 7.1744C18.6586 6.82421 18.2934 6.46493 18 6.17157L15.1716 9ZM18 11.8284L18 11.8284L15.1716 8.99999L15.1716 9L18 11.8284ZM18 11.8284C18.2934 11.5351 18.6586 11.1758 18.9258 10.8256C19.2282 10.4292 19.5858 9.82022 19.5858 9H15.5858C15.5858 8.81898 15.6254 8.65668 15.6774 8.53218C15.7226 8.42362 15.7644 8.37476 15.7457 8.39927C15.7263 8.42482 15.6786 8.482 15.5738 8.59215C15.4698 8.70157 15.3435 8.82807 15.1716 9L18 11.8284ZM15 8.82843C15.1719 8.6565 15.2984 8.53019 15.4078 8.42615C15.518 8.32142 15.5752 8.27375 15.6007 8.25426C15.6252 8.23555 15.5764 8.27736 15.4678 8.32264C15.3433 8.37455 15.181 8.41421 15 8.41421V4.41421C14.1798 4.41421 13.5707 4.77177 13.1744 5.07417C12.8242 5.34136 12.4649 5.70664 12.1716 6L15 8.82843ZM17.8284 6C17.5351 5.70665 17.1758 5.34136 16.8256 5.07417C16.4293 4.77177 15.8202 4.41421 15 4.41421V8.41421C14.819 8.41421 14.6567 8.37455 14.5322 8.32264C14.4236 8.27736 14.3748 8.23555 14.3993 8.25426C14.4248 8.27375 14.482 8.32142 14.5922 8.42615C14.7016 8.53019 14.8281 8.6565 15 8.82843L17.8284 6ZM4.9775 13.1941C4.85793 13.3136 4.52401 13.624 4.29236 14.0332L7.77316 16.0039C7.75915 16.0287 7.7447 16.0522 7.73014 16.0744C7.71565 16.0964 7.70207 16.1155 7.69016 16.1313C7.67837 16.1471 7.66863 16.1591 7.66202 16.1671C7.65871 16.1711 7.65613 16.1741 7.65442 16.1761C7.65271 16.178 7.65178 16.1791 7.65176 16.1791C7.65174 16.1791 7.65252 16.1782 7.65422 16.1764C7.65593 16.1745 7.65842 16.1719 7.66184 16.1683C7.66884 16.1609 7.67852 16.1508 7.692 16.1371C7.7055 16.1233 7.72132 16.1073 7.74066 16.0879C7.76013 16.0683 7.78122 16.0472 7.80593 16.0225L4.9775 13.1941ZM7.80593 16.0225C7.8144 15.9886 7.82164 15.9597 7.82839 15.9329C7.8351 15.9063 7.84068 15.8845 7.84556 15.8659C7.85043 15.8472 7.85407 15.8337 7.8568 15.8239C7.85813 15.8192 7.85914 15.8157 7.85984 15.8132C7.86054 15.8108 7.86088 15.8097 7.86088 15.8097C7.86087 15.8098 7.86046 15.8111 7.85965 15.8136C7.85884 15.8161 7.85758 15.8198 7.85588 15.8247C7.85246 15.8345 7.84713 15.849 7.8397 15.8672C7.8322 15.8856 7.82284 15.9071 7.81141 15.9308C7.79993 15.9547 7.78717 15.9792 7.77316 16.0039L4.29236 14.0332C4.06071 14.4423 3.96637 14.8883 3.92536 15.0524L7.80593 16.0225Z'
      fill={color}
      mask='url(#path-1-outside-1_2165_508)'
    />
    <path d='M12.5 7.5L15.5 5.5L18.5 8.5L16.5 11.5L12.5 7.5Z' fill={color} />
  </svg>
)

export const EditAlt: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M6 21L5.81092 17.9747C5.37149 10.9438 10.9554 5 18 5V5L16.7827 5.97387C14.3918 7.88656 13 10.7824 13 13.8442V13.8442C13 15.9831 11.0278 17.5774 8.93642 17.1292L6 16.5'
      stroke={color}
      strokeWidth='2'
    />
  </svg>
)

export const EditDuotoneOne: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M13.5 5.5L6.45321 12.5468C6.22845 12.7716 6.11607 12.8839 6.04454 13.0229C5.97301 13.1619 5.94689 13.3187 5.89463 13.6322L5.11508 18.3095C5.06262 18.6243 5.03639 18.7817 5.12736 18.8726C5.21833 18.9636 5.37571 18.9374 5.69048 18.8849L10.3678 18.1054L10.3678 18.1054C10.6813 18.0531 10.8381 18.027 10.9771 17.9555C11.1161 17.8839 11.2284 17.7716 11.4532 17.5468L11.4532 17.5468L18.5 10.5C19.5171 9.48295 20.0256 8.97442 20.1384 8.36277C20.1826 8.12295 20.1826 7.87705 20.1384 7.63723C20.0256 7.02558 19.5171 6.51705 18.5 5.5C17.4829 4.48295 16.9744 3.97442 16.3628 3.8616C16.1229 3.81737 15.8771 3.81737 15.6372 3.8616C15.0256 3.97442 14.5171 4.48294 13.5 5.5Z'
      fill={color}
      fillOpacity='0.25'
    />
    <path
      d='M12.2929 6.70711L6.45321 12.5468C6.22845 12.7716 6.11607 12.8839 6.04454 13.0229C5.97301 13.1619 5.94689 13.3187 5.89463 13.6322L5.11508 18.3095C5.06262 18.6243 5.03639 18.7817 5.12736 18.8726C5.21833 18.9636 5.37571 18.9374 5.69048 18.8849L10.3678 18.1054L10.3678 18.1054C10.6813 18.0531 10.8381 18.027 10.9771 17.9555C11.1161 17.8839 11.2284 17.7716 11.4532 17.5468L11.4532 17.5468L17.2929 11.7071C17.6262 11.3738 17.7929 11.2071 17.7929 11C17.7929 10.7929 17.6262 10.6262 17.2929 10.2929L17.2929 10.2929L13.7071 6.70711C13.3738 6.37377 13.2071 6.20711 13 6.20711C12.7929 6.20711 12.6262 6.37377 12.2929 6.70711Z'
      fill={color}
    />
  </svg>
)

export const EditDuotone: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M6.50002 16L8.83426 16.7182C10.9043 17.3552 13 15.8073 13 13.6415C13 9.2432 18 10 18 5C18 5 7.50003 5 6.16461 15.9114L6.50002 16Z'
      fill={color}
      fillOpacity='0.25'
    />
    <path d='M6.5 21.5L6.17696 17.9466C5.54494 10.9943 11.019 5 18 5V5' stroke={color} />
  </svg>
)

export const EditDuotoneLineOne: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M12.5 7.5L5.92819 14.0718C5.71566 14.2843 5.60939 14.3906 5.53953 14.5212C5.46966 14.6517 5.44019 14.7991 5.38124 15.0938L4.64709 18.7646C4.58057 19.0972 4.5473 19.2635 4.64191 19.3581C4.73652 19.4527 4.90283 19.4194 5.23544 19.3529L8.90621 18.6188C9.20093 18.5598 9.3483 18.5303 9.47885 18.4605C9.60939 18.3906 9.71566 18.2843 9.92819 18.0718L16.5 11.5L12.5 7.5Z'
      fill={color}
      fillOpacity='0.25'
    />
    <path
      d='M5.95396 19.38L5.95397 19.38L5.9801 19.3734L5.98012 19.3734L8.60809 18.7164C8.62428 18.7124 8.64043 18.7084 8.65654 18.7044C8.87531 18.65 9.08562 18.5978 9.27707 18.4894C9.46852 18.381 9.62153 18.2275 9.7807 18.0679C9.79242 18.0561 9.80418 18.0444 9.81598 18.0325L17.0101 10.8385L17.0101 10.8385L17.0369 10.8117C17.3472 10.5014 17.6215 10.2272 17.8128 9.97638C18.0202 9.70457 18.1858 9.39104 18.1858 9C18.1858 8.60896 18.0202 8.29543 17.8128 8.02361C17.6215 7.77285 17.3472 7.49863 17.0369 7.18835L17.01 7.16152L16.8385 6.98995L16.8117 6.96314C16.5014 6.6528 16.2272 6.37853 15.9764 6.1872C15.7046 5.97981 15.391 5.81421 15 5.81421C14.609 5.81421 14.2954 5.97981 14.0236 6.1872C13.7729 6.37853 13.4986 6.65278 13.1884 6.96311L13.1615 6.98995L5.96745 14.184C5.95565 14.1958 5.94386 14.2076 5.93211 14.2193C5.77249 14.3785 5.61904 14.5315 5.51064 14.7229C5.40225 14.9144 5.34999 15.1247 5.29562 15.3435C5.29162 15.3596 5.28761 15.3757 5.28356 15.3919L4.62003 18.046C4.61762 18.0557 4.61518 18.0654 4.61272 18.0752C4.57411 18.2293 4.53044 18.4035 4.51593 18.5518C4.49978 18.7169 4.50127 19.0162 4.74255 19.2574C4.98383 19.4987 5.28307 19.5002 5.44819 19.4841C5.59646 19.4696 5.77072 19.4259 5.92479 19.3873C5.9346 19.3848 5.94433 19.3824 5.95396 19.38Z'
      stroke={color}
      strokeWidth='1.2'
    />
    <path d='M12.5 7.5L16.5 11.5' stroke={color} strokeWidth='1.2' />
  </svg>
)

export const EditDuotoneLine: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M9.5 8L16.5 5.5L13.5 10.5L12.5 15.5L11 17.5L5.5 16.5L6 14.5L9.5 8Z'
      fill={color}
      fillOpacity='0.25'
    />
    <path
      d='M6 21L5.81092 17.9747C5.37149 10.9438 10.9554 5 18 5V5L16.542 6.1664C14.3032 7.9574 13 10.669 13 13.536V13.536C13 15.7115 10.8448 17.2303 8.79604 16.4986L6 15.5'
      stroke={color}
      strokeWidth='1.2'
    />
  </svg>
)

export const EditFillOne: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M17.204 10.796L19 9C19.5453 8.45475 19.8179 8.18213 19.9636 7.88803C20.2409 7.32848 20.2409 6.67152 19.9636 6.11197C19.8179 5.81788 19.5453 5.54525 19 5C18.4548 4.45475 18.1821 4.18213 17.888 4.03639C17.3285 3.75911 16.6715 3.75911 16.112 4.03639C15.8179 4.18213 15.5453 4.45475 15 5L13.1814 6.81866C14.1452 8.46926 15.5314 9.84482 17.204 10.796ZM11.7269 8.27311L4.8564 15.1436C4.43134 15.5687 4.21881 15.7812 4.07907 16.0423C3.93934 16.3034 3.88039 16.5981 3.7625 17.1876L3.1471 20.2646C3.08058 20.5972 3.04732 20.7635 3.14193 20.8581C3.23654 20.9527 3.40284 20.9194 3.73545 20.8529L6.81243 20.2375C7.40189 20.1196 7.69661 20.0607 7.95771 19.9209C8.21881 19.7812 8.43134 19.5687 8.8564 19.1436L15.7458 12.2542C14.1241 11.2386 12.7524 9.87627 11.7269 8.27311Z'
      fill={color}
    />
  </svg>
)

export const EditFill: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path d='M9.5 8L16.5 5.5L13.5 10.5L12.5 15.5L11 17.5L5.5 16.5L6 14.5L9.5 8Z' fill={color} />
    <path
      d='M6 21L5.81092 17.9747C5.37149 10.9438 10.9554 5 18 5V5L16.7827 5.97387C14.3918 7.88656 13 10.7824 13 13.8442V13.8442C13 15.9831 11.0278 17.5774 8.93642 17.1292L6 16.5'
      stroke={color}
      strokeWidth='2'
    />
  </svg>
)

export const EditLightOne: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M5.92971 19.283L5.92972 19.283L5.95149 19.2775L5.95151 19.2775L8.58384 18.6194C8.59896 18.6156 8.61396 18.6119 8.62885 18.6082C8.85159 18.5528 9.04877 18.5037 9.2278 18.4023C9.40683 18.301 9.55035 18.1571 9.71248 17.9947C9.72332 17.9838 9.73425 17.9729 9.74527 17.9618L16.9393 10.7678L16.9393 10.7678L16.9626 10.7445C17.2761 10.4311 17.5461 10.1611 17.7333 9.91573C17.9339 9.65281 18.0858 9.36038 18.0858 9C18.0858 8.63961 17.9339 8.34719 17.7333 8.08427C17.5461 7.83894 17.276 7.5689 16.9626 7.2555L16.9393 7.23223L16.5858 7.58579L16.9393 7.23223L16.7678 7.06066L16.7445 7.03738C16.4311 6.72395 16.1611 6.45388 15.9157 6.2667C15.6528 6.0661 15.3604 5.91421 15 5.91421C14.6396 5.91421 14.3472 6.0661 14.0843 6.2667C13.8389 6.45388 13.5689 6.72395 13.2555 7.03739L13.2322 7.06066L6.03816 14.2547C6.02714 14.2658 6.01619 14.2767 6.00533 14.2875C5.84286 14.4496 5.69903 14.5932 5.59766 14.7722C5.4963 14.9512 5.44723 15.1484 5.39179 15.3711C5.38809 15.386 5.38435 15.401 5.38057 15.4162L4.71704 18.0703C4.71483 18.0791 4.7126 18.088 4.71036 18.097C4.67112 18.2537 4.62921 18.421 4.61546 18.5615C4.60032 18.7163 4.60385 18.9773 4.81326 19.1867C5.02267 19.3961 5.28373 19.3997 5.43846 19.3845C5.57899 19.3708 5.74633 19.3289 5.90301 19.2896C5.91195 19.2874 5.92085 19.2852 5.92971 19.283Z'
      stroke={color}
    />
    <path d='M12.5 7.5L15.5 5.5L18.5 8.5L16.5 11.5L12.5 7.5Z' fill={color} />
  </svg>
)

export const EditLight: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M6 21L5.81092 17.9747C5.37149 10.9438 10.9554 5 18 5V5L16.542 6.1664C14.3032 7.9574 13 10.669 13 13.536V13.536C13 15.7115 10.8448 17.2303 8.79604 16.4986L6 15.5'
      stroke={color}
    />
  </svg>
)

export const InfoOne: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M13.7365 21.8481C15.0297 21.62 16.2654 21.1395 17.373 20.4339C18.4806 19.7283 19.4383 18.8115 20.1915 17.7358C20.9448 16.66 21.4787 15.4465 21.763 14.1644C22.0472 12.8823 22.0761 11.5568 21.8481 10.2635C21.62 8.97025 21.1395 7.73456 20.4339 6.627C19.7283 5.51945 18.8115 4.56171 17.7358 3.80848C16.66 3.05525 15.4465 2.52127 14.1644 2.23704C12.8823 1.95281 11.5568 1.92388 10.2635 2.15192C8.97025 2.37996 7.73456 2.86049 6.627 3.56609C5.51945 4.27168 4.56171 5.18851 3.80848 6.26424C3.05525 7.33996 2.52127 8.55352 2.23704 9.83561C1.95281 11.1177 1.92388 12.4432 2.15192 13.7365C2.37996 15.0298 2.86049 16.2654 3.56609 17.373C4.27168 18.4806 5.18851 19.4383 6.26424 20.1915C7.33996 20.9448 8.55352 21.4787 9.83561 21.763C11.1177 22.0472 12.4432 22.0761 13.7365 21.8481L13.7365 21.8481Z'
      stroke={color}
      strokeWidth='2'
    />
    <path d='M12 12L12 18' stroke={color} strokeWidth='2' strokeLinecap='square' />
    <path d='M12 7L12 6' stroke={color} strokeWidth='2' strokeLinecap='square' />
  </svg>
)

export const Info: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle cx='12' cy='12' r='9' stroke={color} strokeWidth='2' />
    <path
      d='M12.5 7.5C12.5 7.77614 12.2761 8 12 8C11.7239 8 11.5 7.77614 11.5 7.5C11.5 7.22386 11.7239 7 12 7C12.2761 7 12.5 7.22386 12.5 7.5Z'
      fill={color}
      stroke={color}
    />
    <path d='M12 17V10' stroke={color} strokeWidth='2' />
  </svg>
)

export const InfoAlt: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M10.5 12H12V16H14M12 8H12.01M13.5628 20.8633C14.7268 20.658 15.8389 20.2256 16.8357 19.5905C17.8325 18.9555 18.6945 18.1303 19.3724 17.1622C20.0503 16.194 20.5309 15.1018 20.7867 13.948C21.0425 12.7941 21.0685 11.6011 20.8633 10.4372C20.658 9.27322 20.2256 8.1611 19.5905 7.1643C18.9555 6.1675 18.1303 5.30554 17.1622 4.62763C16.194 3.94972 15.1018 3.46914 13.948 3.21334C12.7941 2.95753 11.6011 2.9315 10.4372 3.13673C9.27322 3.34196 8.1611 3.77444 7.1643 4.40948C6.1675 5.04451 5.30554 5.86966 4.62763 6.83781C3.94972 7.80597 3.46914 8.89816 3.21334 10.052C2.95753 11.2059 2.9315 12.3989 3.13673 13.5628C3.34197 14.7268 3.77445 15.8389 4.40948 16.8357C5.04451 17.8325 5.86966 18.6945 6.83781 19.3724C7.80597 20.0503 8.89816 20.5309 10.052 20.7867C11.2059 21.0425 12.3989 21.0685 13.5628 20.8633Z'
      stroke={color}
      strokeWidth='2'
      strokeLinecap='round'
      strokeLinejoin='round'
    />
  </svg>
)

export const InfoAltDuotoneOne: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle cx='8' cy='8' r='8' transform='matrix(-1 0 0 1 20 4)' fill={color} fillOpacity='0.25' />
    <path
      d='M11 10.5H11.5C11.7761 10.5 12 10.7239 12 11V15C12 15.2761 12.2239 15.5 12.5 15.5H13M12 8.5H12.01'
      stroke={color}
      strokeLinecap='round'
      strokeLinejoin='round'
    />
  </svg>
)

export const InfoAltDuotone: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle cx='12' cy='12' r='9' fill={color} fillOpacity='0.25' />
    <path d='M12 17.5V10.5H10.5M12 17.5H14M12 17.5H10' stroke={color} />
  </svg>
)

export const InfoAltDuotoneLine: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M11 10.5H11.5C11.7761 10.5 12 10.7239 12 11V15C12 15.2761 12.2239 15.5 12.5 15.5H13M12 8.5H12.01'
      stroke={color}
      strokeLinecap='round'
      strokeLinejoin='round'
    />
    <path
      d='M13.3892 19.8785C14.4238 19.696 15.4124 19.3116 16.2984 18.7471C17.1844 18.1827 17.9506 17.4492 18.5532 16.5886C19.1558 15.728 19.583 14.7572 19.8104 13.7315C20.0378 12.7058 20.0609 11.6454 19.8785 10.6108C19.696 9.5762 19.3116 8.58765 18.7471 7.7016C18.1827 6.81556 17.4492 6.04937 16.5886 5.44678C15.728 4.8442 14.7572 4.41702 13.7315 4.18963C12.7058 3.96225 11.6454 3.93911 10.6108 4.12154C9.5762 4.30397 8.58765 4.6884 7.7016 5.25287C6.81556 5.81734 6.04937 6.55081 5.44678 7.41139C4.8442 8.27197 4.41702 9.24281 4.18963 10.2685C3.96225 11.2942 3.93911 12.3546 4.12154 13.3892C4.30397 14.4238 4.6884 15.4124 5.25287 16.2984C5.81734 17.1844 6.55081 17.9506 7.41139 18.5532C8.27197 19.1558 9.24281 19.583 10.2685 19.8104C11.2942 20.0378 12.3546 20.0609 13.3892 19.8785L13.3892 19.8785Z'
      stroke={color}
      strokeOpacity='0.25'
    />
  </svg>
)

export const InfoAltFill: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21ZM12 7C11.4477 7 11 7.44772 11 8C11 8.55228 11.4477 9 12 9H12.01C12.5623 9 13.01 8.55228 13.01 8C13.01 7.44772 12.5623 7 12.01 7H12ZM10.5 11C9.94772 11 9.5 11.4477 9.5 12C9.5 12.5523 9.94772 13 10.5 13H11V16C11 16.5523 11.4477 17 12 17H14C14.5523 17 15 16.5523 15 16C15 15.4477 14.5523 15 14 15H13V12C13 11.4477 12.5523 11 12 11H10.5Z'
      fill={color}
    />
  </svg>
)

export const InfoAltLight: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M11 10.5H11.5C11.7761 10.5 12 10.7239 12 11V15C12 15.2761 12.2239 15.5 12.5 15.5H13M12 8.5H12.01'
      stroke={color}
      strokeLinecap='round'
      strokeLinejoin='round'
    />
    <path
      d='M13.3892 19.8785C14.4238 19.696 15.4124 19.3116 16.2984 18.7471C17.1844 18.1827 17.9506 17.4492 18.5532 16.5886C19.1558 15.728 19.583 14.7572 19.8104 13.7315C20.0378 12.7058 20.0609 11.6454 19.8785 10.6108C19.696 9.5762 19.3116 8.58765 18.7471 7.7016C18.1827 6.81556 17.4492 6.04937 16.5886 5.44678C15.728 4.8442 14.7572 4.41702 13.7315 4.18963C12.7058 3.96225 11.6454 3.93911 10.6108 4.12154C9.5762 4.30397 8.58765 4.6884 7.7016 5.25287C6.81556 5.81734 6.04937 6.55081 5.44678 7.41139C4.8442 8.27197 4.41702 9.24281 4.18963 10.2685C3.96225 11.2942 3.93911 12.3546 4.12154 13.3892C4.30397 14.4238 4.6884 15.4124 5.25287 16.2984C5.81734 17.1844 6.55081 17.9506 7.41139 18.5532C8.27197 19.1558 9.24281 19.583 10.2685 19.8104C11.2942 20.0378 12.3546 20.0609 13.3892 19.8785L13.3892 19.8785Z'
      stroke={color}
    />
  </svg>
)

export const InfoDuotone: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle cx='12' cy='12' r='9' fill={color} fillOpacity='0.25' />
    <path
      d='M13 7C13 7.55228 12.5523 8 12 8C11.4477 8 11 7.55228 11 7C11 6.44772 11.4477 6 12 6C12.5523 6 13 6.44772 13 7Z'
      fill={color}
    />
    <path
      d='M12 16.5V11.5C12 11.035 12 10.8025 11.9489 10.6118C11.8102 10.0941 11.4059 9.68981 10.8882 9.55111C10.6975 9.5 10.465 9.5 10 9.5V9.5M12 16.5H13.5M12 16.5H10.5'
      stroke={color}
    />
  </svg>
)

export const InfoDuotoneLineOne: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle
      cx='10'
      cy='10'
      r='10'
      transform='matrix(-1 0 0 1 22 2)'
      fill={color}
      fillOpacity='0.25'
      stroke={color}
      strokeWidth='1.2'
    />
    <path d='M12 12L12 18' stroke={color} strokeWidth='1.2' strokeLinecap='square' />
    <path d='M12 7L12 6' stroke={color} strokeWidth='1.2' strokeLinecap='square' />
  </svg>
)

export const InfoDuotoneLine: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle
      cx='12'
      cy='12'
      r='9'
      fill={color}
      fillOpacity='0.25'
      stroke={color}
      strokeWidth='1.2'
    />
    <path
      d='M12 8.1C12.3314 8.1 12.6 7.83137 12.6 7.5C12.6 7.16863 12.3314 6.9 12 6.9C11.6686 6.9 11.4 7.16863 11.4 7.5C11.4 7.83137 11.6686 8.1 12 8.1Z'
      fill={color}
      stroke={color}
      strokeWidth='0.2'
    />
    <path d='M12 17V10' stroke={color} strokeWidth='1.2' />
  </svg>
)

export const InfoFillOne: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12ZM13 11V12V18V19H11V18V12V11H13ZM11 7V8H13V7V6V5H11V6V7Z'
      fill={color}
    />
  </svg>
)

export const InfoFill: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12ZM13 8C13 8.55228 12.5523 9 12 9C11.4477 9 11 8.55228 11 8C11 7.44772 11.4477 7 12 7C12.5523 7 13 7.44772 13 8ZM13 17V11H11V17H13Z'
      fill={color}
    />
  </svg>
)

export const OnButton: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M6.34315 6.34315C5.22433 7.46197 4.4624 8.88743 4.15372 10.4393C3.84504 11.9911 4.00346 13.5997 4.60896 15.0615C5.21447 16.5233 6.23985 17.7727 7.55544 18.6518C8.87103 19.5308 10.4178 20 12 20C13.5823 20 15.129 19.5308 16.4446 18.6518C17.7602 17.7727 18.7855 16.5233 19.391 15.0615C19.9965 13.5997 20.155 11.9911 19.8463 10.4393C19.5376 8.88743 18.7757 7.46197 17.6569 6.34315'
      stroke={color}
      strokeWidth='2'
      strokeLinecap='round'
    />
    <path d='M12 8L12 4' stroke={color} strokeWidth='2' strokeLinecap='round' />
  </svg>
)

export const OnButtonDuotone: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M10.5 6.57575C10.5 6.39592 10.5 6.30601 10.438 6.2611C10.376 6.21618 10.2935 6.24325 10.1285 6.29738C7.73122 7.08369 6 9.33953 6 11.9997C6 15.3134 8.68629 17.9997 12 17.9997C15.3137 17.9997 18 15.3134 18 11.9997C18 9.33953 16.2688 7.08369 13.8715 6.29738C13.7065 6.24325 13.624 6.21618 13.562 6.2611C13.5 6.30601 13.5 6.39592 13.5 6.57575V8.99977C13.5 9.8282 12.8284 10.4998 12 10.4998C11.1716 10.4998 10.5 9.8282 10.5 8.99977V6.57575Z'
      fill={color}
      fillOpacity='0.25'
    />
    <path d='M12 9L12 4' stroke={color} strokeLinecap='round' />
    <path
      d='M18.0104 5.98959C19.1992 7.17834 20.0087 8.69289 20.3367 10.3417C20.6646 11.9906 20.4963 13.6996 19.853 15.2528C19.2096 16.806 18.1202 18.1335 16.7223 19.0675C15.3245 20.0015 13.6811 20.5 12 20.5C10.3189 20.5 8.67547 20.0015 7.27765 19.0675C5.87984 18.1335 4.79037 16.806 4.14702 15.2528C3.50368 13.6996 3.33535 11.9906 3.66332 10.3417C3.9913 8.69289 4.80085 7.17834 5.98959 5.98959'
      stroke={color}
      strokeLinecap='round'
    />
  </svg>
)

export const OnButtonDuotoneLine: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle cx='12' cy='15' r='5' fill={color} fillOpacity='0.25' />
    <path
      d='M6.34315 6.34315C5.22433 7.46197 4.4624 8.88743 4.15372 10.4393C3.84504 11.9911 4.00346 13.5997 4.60896 15.0615C5.21447 16.5233 6.23985 17.7727 7.55544 18.6518C8.87103 19.5308 10.4178 20 12 20C13.5823 20 15.129 19.5308 16.4446 18.6518C17.7602 17.7727 18.7855 16.5233 19.391 15.0615C19.9965 13.5997 20.155 11.9911 19.8463 10.4393C19.5376 8.88743 18.7757 7.46197 17.6569 6.34315'
      stroke={color}
      strokeWidth='1.2'
      strokeLinecap='round'
    />
    <path d='M12 8L12 4' stroke={color} strokeWidth='1.2' strokeLinecap='round' />
  </svg>
)

export const OnButtonFill: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3C7.02944 3 3 7.02944 3 12C3 16.9706 7.02944 21 12 21ZM12 5C12.5523 5 13 5.44772 13 6V9C13 9.55228 12.5523 10 12 10C11.4477 10 11 9.55229 11 9V6C11 5.44772 11.4477 5 12 5ZM15.5355 7.05025C15.9261 6.65973 16.5592 6.65973 16.9497 7.05025C17.9287 8.02922 18.5954 9.2765 18.8655 10.6344C19.1356 11.9922 18.997 13.3997 18.4672 14.6788C17.9373 15.9579 17.0401 17.0511 15.889 17.8203C14.7378 18.5895 13.3845 19 12 19C10.6155 19 9.26215 18.5895 8.11101 17.8203C6.95986 17.0511 6.06265 15.9579 5.53284 14.6788C5.00303 13.3997 4.8644 11.9922 5.1345 10.6344C5.4046 9.2765 6.07128 8.02922 7.05025 7.05025C7.44077 6.65973 8.07394 6.65973 8.46446 7.05025C8.85499 7.44078 8.85499 8.07394 8.46446 8.46447C7.7652 9.16373 7.289 10.0546 7.09607 11.0245C6.90314 11.9945 7.00216 12.9998 7.3806 13.9134C7.75904 14.827 8.3999 15.6079 9.22215 16.1573C10.0444 16.7068 11.0111 17 12 17C12.9889 17 13.9556 16.7068 14.7778 16.1573C15.6001 15.6079 16.241 14.827 16.6194 13.9134C16.9978 12.9998 17.0968 11.9945 16.9039 11.0245C16.711 10.0546 16.2348 9.16373 15.5355 8.46447C15.145 8.07394 15.145 7.44078 15.5355 7.05025Z'
      fill={color}
    />
  </svg>
)

export const OnButtonLight: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M6.34315 6.34315C5.22433 7.46197 4.4624 8.88743 4.15372 10.4393C3.84504 11.9911 4.00346 13.5997 4.60896 15.0615C5.21447 16.5233 6.23985 17.7727 7.55544 18.6518C8.87103 19.5308 10.4178 20 12 20C13.5823 20 15.129 19.5308 16.4446 18.6518C17.7602 17.7727 18.7855 16.5233 19.391 15.0615C19.9965 13.5997 20.155 11.9911 19.8463 10.4393C19.5376 8.88743 18.7757 7.46197 17.6569 6.34315'
      stroke={color}
      strokeLinecap='round'
    />
    <path d='M12 8L12 4' stroke={color} strokeLinecap='round' />
  </svg>
)

export const Question: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle cx='12' cy='12' r='9' stroke={color} strokeWidth='2' />
    <circle cx='12' cy='18' r='0.5' fill={color} stroke={color} />
    <path
      d='M12 16V14.5811C12 13.6369 12.6042 12.7986 13.5 12.5V12.5C14.3958 12.2014 15 11.3631 15 10.4189V9.90569C15 8.30092 13.6991 7 12.0943 7H12C10.3431 7 9 8.34315 9 10V10'
      stroke={color}
      strokeWidth='2'
    />
  </svg>
)

export const QuestionDuotone: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle
      cx='12'
      cy='12'
      r='9'
      fill={color}
      fillOpacity='0.25'
      stroke={color}
      strokeWidth='1.2'
    />
    <circle cx='12' cy='18' r='0.6' fill={color} stroke={color} strokeWidth='0.2' />
    <path
      d='M12 16V15.1432C12 14.429 12.357 13.762 12.9512 13.3659L13.5497 12.9669C14.4558 12.3628 15 11.3459 15 10.2569V10C15 8.34315 13.6569 7 12 7V7C10.3431 7 9 8.34315 9 10V10'
      stroke={color}
      strokeWidth='1.2'
    />
  </svg>
)

export const QuestionDuotoneLine: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle
      cx='12'
      cy='12'
      r='9'
      fill={color}
      fillOpacity='0.25'
      stroke={color}
      strokeWidth='1.2'
    />
    <circle cx='12' cy='18' r='0.6' fill={color} stroke={color} strokeWidth='0.2' />
    <path
      d='M12 16V15.1432C12 14.429 12.357 13.762 12.9512 13.3659L13.5497 12.9669C14.4558 12.3628 15 11.3459 15 10.2569V10C15 8.34315 13.6569 7 12 7V7C10.3431 7 9 8.34315 9 10V10'
      stroke={color}
      strokeWidth='1.2'
    />
  </svg>
)

export const QuestionFill: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12ZM13 18C13 18.5523 12.5523 19 12 19C11.4477 19 11 18.5523 11 18C11 17.4477 11.4477 17 12 17C12.5523 17 13 17.4477 13 18ZM12 5C9.79086 5 8 6.79086 8 9H10C10 7.89543 10.8954 7 12 7H12.0943C13.1468 7 14 7.85321 14 8.90569V9.41886C14 9.93267 13.6712 10.3888 13.1838 10.5513C11.8796 10.986 11 12.2065 11 13.5811V16H13V13.5811C13 13.0673 13.3288 12.6112 13.8162 12.4487C15.1204 12.014 16 10.7935 16 9.41886V8.90569C16 6.74864 14.2514 5 12.0943 5H12Z'
      fill={color}
    />
  </svg>
)

export const QuestionLight: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle cx='12' cy='12' r='9' stroke={color} />
    <circle cx='12' cy='18' r='0.5' fill={color} />
    <path
      d='M12 16V15.1432C12 14.429 12.357 13.762 12.9512 13.3659L13.5497 12.9669C14.4558 12.3628 15 11.3459 15 10.2569V10C15 8.34315 13.6569 7 12 7V7C10.3431 7 9 8.34315 9 10V10'
      stroke={color}
    />
  </svg>
)

export const Search: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle cx='11' cy='11' r='7' stroke={color} strokeWidth='2' />
    <path d='M20 20L17 17' stroke={color} strokeWidth='2' strokeLinecap='round' />
  </svg>
)

export const SearchAlt: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle cx='11' cy='11' r='7' stroke={color} strokeWidth='2' />
    <path
      d='M11 8C10.606 8 10.2159 8.0776 9.85195 8.22836C9.48797 8.37913 9.15726 8.6001 8.87868 8.87868C8.6001 9.15726 8.37913 9.48797 8.22836 9.85195C8.0776 10.2159 8 10.606 8 11'
      stroke={color}
      strokeWidth='2'
      strokeLinecap='round'
    />
    <path d='M20 20L17 17' stroke={color} strokeWidth='2' strokeLinecap='round' />
  </svg>
)

export const SearchAltDuotone: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M11 17C14.3137 17 17 14.3137 17 11C17 7.68629 14.3137 5 11 5C7.68629 5 5 7.68629 5 11C5 14.3137 7.68629 17 11 17ZM9.85195 8.22836C10.2159 8.0776 10.606 8 11 8C11.2761 8 11.5 7.77614 11.5 7.5C11.5 7.22386 11.2761 7 11 7C10.4747 7 9.95457 7.10346 9.46927 7.30448C8.98396 7.5055 8.54301 7.80014 8.17157 8.17157C7.80014 8.54301 7.5055 8.98396 7.30448 9.46927C7.10346 9.95457 7 10.4747 7 11C7 11.2761 7.22386 11.5 7.5 11.5C7.77614 11.5 8 11.2761 8 11C8 10.606 8.0776 10.2159 8.22836 9.85195C8.37913 9.48797 8.6001 9.15726 8.87868 8.87868C9.15726 8.6001 9.48797 8.37913 9.85195 8.22836Z'
      fill={color}
    />
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M17.9282 15C18.0663 14.7609 17.9844 14.4551 17.7452 14.317C17.5061 14.1789 17.2003 14.2609 17.0622 14.5C16.4478 15.5641 15.5642 16.4478 14.5 17.0622C14.2609 17.2002 14.1789 17.506 14.317 17.7452C14.4551 17.9843 14.7609 18.0663 15 17.9282C15.4624 17.6612 15.8951 17.3497 16.2923 16.9993L19.1465 19.8536C19.3417 20.0488 19.6583 20.0488 19.8536 19.8536C20.0488 19.6583 20.0488 19.3417 19.8536 19.1464L16.9994 16.2922C17.3498 15.895 17.6612 15.4624 17.9282 15Z'
      fill={color}
      fillOpacity='0.25'
    />
  </svg>
)

export const SearchAltDuotoneLine: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle
      cx='11'
      cy='11'
      r='6'
      fill={color}
      fillOpacity='0.25'
      stroke={color}
      strokeWidth='1.2'
    />
    <path
      d='M11 8C10.606 8 10.2159 8.0776 9.85195 8.22836C9.48797 8.37913 9.15726 8.6001 8.87868 8.87868C8.6001 9.15726 8.37913 9.48797 8.22836 9.85195C8.0776 10.2159 8 10.606 8 11'
      stroke={color}
      strokeWidth='1.2'
      strokeLinecap='round'
    />
    <path d='M20 20L17 17' stroke={color} strokeWidth='1.2' strokeLinecap='round' />
  </svg>
)

export const SearchAltFill: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M11 18C14.866 18 18 14.866 18 11C18 7.13401 14.866 4 11 4C7.13401 4 4 7.13401 4 11C4 14.866 7.13401 18 11 18ZM11 6C10.3434 6 9.69321 6.12933 9.08658 6.3806C8.47995 6.63188 7.92876 7.00017 7.46447 7.46447C7.00017 7.92876 6.63188 8.47996 6.3806 9.08658C6.12933 9.69321 6 10.3434 6 11C6 11.5523 6.44772 12 7 12C7.55228 12 8 11.5523 8 11C8 10.606 8.0776 10.2159 8.22836 9.85195C8.37913 9.48797 8.6001 9.15726 8.87868 8.87868C9.15726 8.6001 9.48797 8.37913 9.85195 8.22836C10.2159 8.0776 10.606 8 11 8C11.5523 8 12 7.55228 12 7C12 6.44772 11.5523 6 11 6Z'
      fill={color}
    />
    <path d='M20 20L18 18' stroke={color} strokeWidth='2' strokeLinecap='round' />
  </svg>
)

export const SearchAltLight: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle cx='11' cy='11' r='6' stroke={color} />
    <path
      d='M11 8C10.606 8 10.2159 8.0776 9.85195 8.22836C9.48797 8.37913 9.15726 8.6001 8.87868 8.87868C8.6001 9.15726 8.37913 9.48797 8.22836 9.85195C8.0776 10.2159 8 10.606 8 11'
      stroke={color}
      strokeLinecap='round'
    />
    <path d='M20 20L17 17' stroke={color} strokeLinecap='round' />
  </svg>
)

export const SearchDuotone: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M12 19C15.866 19 19 15.866 19 12C19 8.13401 15.866 5 12 5C8.13401 5 5 8.13401 5 12C5 15.866 8.13401 19 12 19ZM10.0866 7.3806C10.6932 7.12933 11.3434 7 12 7C12.2761 7 12.5 6.77614 12.5 6.5C12.5 6.22386 12.2761 6 12 6C11.2121 6 10.4319 6.15519 9.7039 6.45672C8.97595 6.75825 8.31451 7.20021 7.75736 7.75736C7.20021 8.31451 6.75825 8.97595 6.45672 9.7039C6.15519 10.4319 6 11.2121 6 12C6 12.2761 6.22386 12.5 6.5 12.5C6.77614 12.5 7 12.2761 7 12C7 11.3434 7.12933 10.6932 7.3806 10.0866C7.63188 9.47996 8.00017 8.92876 8.46447 8.46447C8.92876 8.00017 9.47995 7.63188 10.0866 7.3806Z'
      fill={color}
      fillOpacity='0.25'
    />
    <path d='M20.5 20.5L17 17' stroke={color} strokeLinecap='round' />
    <circle cx='11' cy='11' r='8.5' stroke={color} />
  </svg>
)

export const SearchDuotoneLine: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle
      cx='11'
      cy='11'
      r='6'
      fill={color}
      fillOpacity='0.25'
      stroke={color}
      strokeWidth='1.2'
    />
    <path d='M20 20L17 17' stroke={color} strokeWidth='1.2' strokeLinecap='round' />
  </svg>
)

export const SearchFill: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M18 11C18 14.866 14.866 18 11 18C7.13401 18 4 14.866 4 11C4 7.13401 7.13401 4 11 4C14.866 4 18 7.13401 18 11Z'
      fill={color}
    />
    <path d='M20 20L18 18' stroke={color} strokeWidth='2' strokeLinecap='round' />
  </svg>
)

export const SearchLight: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle cx='11' cy='11' r='6' stroke={color} />
    <path d='M20 20L17 17' stroke={color} strokeLinecap='round' />
  </svg>
)

export const SettingAltFill: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M12 1.48459C11.3425 1.48459 10.7706 1.90617 9.62667 2.74933L7.90576 4.01778C7.72555 4.15061 7.63545 4.21702 7.53871 4.27287C7.44198 4.32872 7.33941 4.37355 7.13427 4.4632L5.1753 5.31932C3.87315 5.8884 3.22208 6.17294 2.89336 6.74229C2.56464 7.31165 2.64376 8.01777 2.802 9.43L3.04006 11.5546C3.06499 11.7771 3.07745 11.8883 3.07745 12C3.07745 12.1117 3.06499 12.2229 3.04006 12.4454L2.802 14.57C2.64376 15.9822 2.56464 16.6883 2.89336 17.2577C3.22208 17.8271 3.87315 18.1116 5.1753 18.6807L7.13427 19.5368C7.33941 19.6264 7.44198 19.6713 7.53871 19.7271C7.63545 19.783 7.72555 19.8494 7.90576 19.9822L9.62667 21.2507C10.7706 22.0938 11.3425 22.5154 12 22.5154C12.6574 22.5154 13.2294 22.0938 14.3733 21.2507L14.3733 21.2507L16.0942 19.9822C16.2744 19.8494 16.3645 19.783 16.4612 19.7271C16.558 19.6713 16.6605 19.6264 16.8657 19.5368L18.8246 18.6807C20.1268 18.1116 20.7779 17.8271 21.1066 17.2577C21.4353 16.6883 21.3562 15.9822 21.1979 14.57L20.9599 12.4454L20.9599 12.4454C20.935 12.2229 20.9225 12.1117 20.9225 12C20.9225 11.8883 20.9349 11.7771 20.9599 11.5546L20.9599 11.5546L21.1979 9.43C21.3562 8.01777 21.4353 7.31165 21.1066 6.74229C20.7779 6.17294 20.1268 5.8884 18.8246 5.31932L16.8657 4.4632L16.8657 4.46319C16.6605 4.37355 16.558 4.32872 16.4612 4.27287C16.3645 4.21702 16.2744 4.15061 16.0942 4.01778L14.3733 2.74933C13.2294 1.90617 12.6574 1.48459 12 1.48459ZM12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79083 8 7.99997 9.79086 7.99997 12C7.99997 14.2091 9.79083 16 12 16Z'
      fill={color}
    />
  </svg>
)

export const SettingAltLine: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M3.08168 13.9445C2.55298 12.9941 2.28862 12.5188 2.28862 12C2.28862 11.4812 2.55298 11.0059 3.08169 10.0555L4.43094 7.63L5.85685 5.24876C6.4156 4.31567 6.69498 3.84912 7.14431 3.5897C7.59364 3.33028 8.13737 3.3216 9.22483 3.30426L12 3.26L14.7752 3.30426C15.8626 3.3216 16.4064 3.33028 16.8557 3.5897C17.305 3.84912 17.5844 4.31567 18.1431 5.24876L19.5691 7.63L20.9183 10.0555C21.447 11.0059 21.7114 11.4812 21.7114 12C21.7114 12.5188 21.447 12.9941 20.9183 13.9445L19.5691 16.37L18.1431 18.7512C17.5844 19.6843 17.305 20.1509 16.8557 20.4103C16.4064 20.6697 15.8626 20.6784 14.7752 20.6957L12 20.74L9.22483 20.6957C8.13737 20.6784 7.59364 20.6697 7.14431 20.4103C6.69498 20.1509 6.4156 19.6843 5.85685 18.7512L4.43094 16.37L3.08168 13.9445Z'
      stroke={color}
      strokeWidth='2'
    />
    <circle cx='12' cy='12' r='3' stroke={color} strokeWidth='2' />
  </svg>
)

export const SettingAltLineDuotone: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M5.30976 6.69267L3.98623 9.19267C3.2584 10.5675 2.89448 11.2549 2.89448 12C2.89448 12.7451 3.2584 13.4325 3.98623 14.8073L5.30976 17.3073C6.13314 18.8626 6.54483 19.6402 7.25883 20.0701C7.97282 20.5 8.85271 20.5 10.6125 20.5H13.3875C15.1473 20.5 16.0272 20.5 16.7412 20.0701C17.4552 19.6402 17.8669 18.8626 18.6902 17.3073L20.0138 14.8073C20.7416 13.4325 21.1055 12.7451 21.1055 12C21.1055 11.2549 20.7416 10.5675 20.0138 9.19268L18.6902 6.69267C17.8669 5.1374 17.4552 4.35977 16.7412 3.92988C16.0272 3.5 15.1473 3.5 13.3875 3.5H10.6125C8.85271 3.5 7.97282 3.5 7.25883 3.92988C6.54483 4.35977 6.13314 5.1374 5.30976 6.69267Z'
      fill={color}
      fillOpacity='0.25'
    />
    <circle cx='12' cy='12' r='3' fill={color} />
  </svg>
)

export const SettingAltLineDuotoneLine: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M2.28864 12C2.28864 12.5188 2.55299 12.9941 3.0817 13.9445L4.43095 16.37L5.85687 18.7512C6.41562 19.6843 6.695 20.1509 7.14433 20.4103C7.59366 20.6697 8.13739 20.6784 9.22485 20.6957L12 20.74L14.7752 20.6957C15.8626 20.6784 16.4064 20.6697 16.8557 20.4103C17.305 20.1509 17.5844 19.6843 18.1432 18.7512L19.5691 16.37L20.9183 13.9445C21.447 12.9941 21.7114 12.5188 21.7114 12C21.7114 11.4812 21.447 11.0059 20.9183 10.0555L19.5691 7.63L18.1432 5.24876C17.5844 4.31567 17.305 3.84912 16.8557 3.5897C16.4064 3.33028 15.8626 3.3216 14.7752 3.30426L12 3.26L9.22485 3.30426C8.13739 3.3216 7.59366 3.33028 7.14432 3.5897C6.69499 3.84912 6.41562 4.31567 5.85687 5.24876L5.85687 5.24876L4.43095 7.63L3.0817 10.0555C2.55299 11.0059 2.28864 11.4812 2.28864 12ZM12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3432 9 9.00002 10.3431 9.00002 12C9.00002 13.6569 10.3432 15 12 15Z'
      fill={color}
      fillOpacity='0.25'
    />
    <path
      d='M3.08168 13.9445C2.55298 12.9941 2.28862 12.5188 2.28862 12C2.28862 11.4812 2.55298 11.0059 3.08169 10.0555L4.43094 7.63L5.85685 5.24876C6.4156 4.31567 6.69498 3.84912 7.14431 3.5897C7.59364 3.33028 8.13737 3.3216 9.22483 3.30426L12 3.26L14.7752 3.30426C15.8626 3.3216 16.4064 3.33028 16.8557 3.5897C17.305 3.84912 17.5844 4.31567 18.1431 5.24876L19.5691 7.63L20.9183 10.0555C21.447 11.0059 21.7114 11.4812 21.7114 12C21.7114 12.5188 21.447 12.9941 20.9183 13.9445L19.5691 16.37L18.1431 18.7512C17.5844 19.6843 17.305 20.1509 16.8557 20.4103C16.4064 20.6697 15.8626 20.6784 14.7752 20.6957L12 20.74L9.22483 20.6957C8.13737 20.6784 7.59364 20.6697 7.14431 20.4103C6.69498 20.1509 6.4156 19.6843 5.85685 18.7512L4.43094 16.37L3.08168 13.9445Z'
      stroke={color}
      strokeWidth='1.2'
    />
    <circle cx='12' cy='12' r='3' stroke={color} strokeWidth='1.2' />
  </svg>
)

export const SettingAltLineLight: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M3.08168 13.9445C2.55298 12.9941 2.28862 12.5188 2.28862 12C2.28862 11.4812 2.55298 11.0059 3.08169 10.0555L4.43094 7.63L5.85685 5.24876C6.4156 4.31567 6.69498 3.84912 7.14431 3.5897C7.59364 3.33028 8.13737 3.3216 9.22483 3.30426L12 3.26L14.7752 3.30426C15.8626 3.3216 16.4064 3.33028 16.8557 3.5897C17.305 3.84912 17.5844 4.31567 18.1431 5.24876L19.5691 7.63L20.9183 10.0555C21.447 11.0059 21.7114 11.4812 21.7114 12C21.7114 12.5188 21.447 12.9941 20.9183 13.9445L19.5691 16.37L18.1431 18.7512C17.5844 19.6843 17.305 20.1509 16.8557 20.4103C16.4064 20.6697 15.8626 20.6784 14.7752 20.6957L12 20.74L9.22483 20.6957C8.13737 20.6784 7.59364 20.6697 7.14431 20.4103C6.69498 20.1509 6.4156 19.6843 5.85685 18.7512L4.43094 16.37L3.08168 13.9445Z'
      stroke={color}
    />
    <circle cx='12' cy='12' r='3' stroke={color} />
  </svg>
)

export const SettingFill: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M13.9838 2.54161C14.0711 2.71093 14.0928 2.92777 14.1361 3.36144C14.2182 4.1823 14.2593 4.59274 14.4311 4.81793C14.649 5.10358 15.0034 5.25038 15.3595 5.20248C15.6402 5.16472 15.9594 4.90352 16.5979 4.38113C16.9352 4.10515 17.1038 3.96716 17.2853 3.90918C17.5158 3.83555 17.7652 3.84798 17.9872 3.94419C18.162 4.01994 18.3161 4.17402 18.6243 4.4822L19.5178 5.37567C19.8259 5.68385 19.98 5.83794 20.0558 6.01275C20.152 6.23478 20.1644 6.48415 20.0908 6.71464C20.0328 6.89612 19.8948 7.06478 19.6188 7.4021C19.0964 8.0406 18.8352 8.35984 18.7975 8.64056C18.7496 8.99662 18.8964 9.35102 19.182 9.56893C19.4072 9.74072 19.8176 9.78176 20.6385 9.86385C21.0722 9.90722 21.2891 9.92891 21.4584 10.0162C21.6734 10.1272 21.841 10.3123 21.9299 10.5373C22 10.7145 22 10.9324 22 11.3682V12.6319C22 13.0676 22 13.2855 21.93 13.4626C21.841 13.6877 21.6734 13.8729 21.4583 13.9838C21.289 14.0711 21.0722 14.0928 20.6386 14.1361L20.6386 14.1361C19.818 14.2182 19.4077 14.2592 19.1825 14.4309C18.8967 14.6489 18.7499 15.0034 18.7979 15.3596C18.8357 15.6402 19.0968 15.9593 19.619 16.5976C19.8949 16.9348 20.0328 17.1034 20.0908 17.2848C20.1645 17.5154 20.152 17.7648 20.0558 17.9869C19.98 18.1617 19.826 18.3157 19.5179 18.6238L18.6243 19.5174C18.3162 19.8255 18.1621 19.9796 17.9873 20.0554C17.7652 20.1516 17.5159 20.164 17.2854 20.0904C17.1039 20.0324 16.9352 19.8944 16.5979 19.6184L16.5979 19.6184C15.9594 19.096 15.6402 18.8348 15.3595 18.7971C15.0034 18.7492 14.649 18.896 14.4311 19.1816C14.2593 19.4068 14.2183 19.8173 14.1362 20.6383C14.0928 21.0722 14.0711 21.2891 13.9837 21.4585C13.8728 21.6735 13.6877 21.8409 13.4628 21.9299C13.2856 22 13.0676 22 12.6316 22H11.3682C10.9324 22 10.7145 22 10.5373 21.9299C10.3123 21.841 10.1272 21.6734 10.0162 21.4584C9.92891 21.2891 9.90722 21.0722 9.86385 20.6385C9.78176 19.8176 9.74072 19.4072 9.56892 19.182C9.35101 18.8964 8.99663 18.7496 8.64057 18.7975C8.35985 18.8352 8.04059 19.0964 7.40208 19.6189L7.40206 19.6189C7.06473 19.8949 6.89607 20.0329 6.71458 20.0908C6.4841 20.1645 6.23474 20.152 6.01272 20.0558C5.8379 19.9801 5.6838 19.826 5.37561 19.5178L4.48217 18.6243C4.17398 18.3162 4.01988 18.1621 3.94414 17.9873C3.84794 17.7652 3.8355 17.5159 3.90913 17.2854C3.96711 17.1039 4.10511 16.9352 4.3811 16.5979C4.90351 15.9594 5.16471 15.6402 5.20247 15.3594C5.25037 15.0034 5.10357 14.649 4.81792 14.4311C4.59273 14.2593 4.1823 14.2182 3.36143 14.1361C2.92776 14.0928 2.71093 14.0711 2.54161 13.9838C2.32656 13.8728 2.15902 13.6877 2.07005 13.4627C2 13.2855 2 13.0676 2 12.6318V11.3683C2 10.9324 2 10.7144 2.07008 10.5372C2.15905 10.3123 2.32654 10.1272 2.54152 10.0163C2.71088 9.92891 2.92777 9.90722 3.36155 9.86384H3.36155H3.36156C4.18264 9.78173 4.59319 9.74068 4.81842 9.56881C5.10395 9.35092 5.2507 8.99664 5.20287 8.64066C5.16514 8.35987 4.90385 8.04052 4.38128 7.40182C4.10516 7.06435 3.96711 6.89561 3.90914 6.71405C3.83557 6.48364 3.848 6.23438 3.94413 6.01243C4.01988 5.83754 4.17403 5.68339 4.48233 5.37509L5.37565 4.48177L5.37566 4.48177C5.68385 4.17357 5.83795 4.01947 6.01277 3.94373C6.23478 3.84753 6.48414 3.8351 6.71463 3.90872C6.89612 3.9667 7.06481 4.10472 7.4022 4.38076C8.04061 4.9031 8.35982 5.16427 8.64044 5.20207C8.99661 5.25003 9.35113 5.10319 9.56907 4.81742C9.74077 4.59227 9.78181 4.18195 9.86387 3.36131C9.90722 2.92776 9.9289 2.71098 10.0162 2.5417C10.1271 2.32658 10.3123 2.15898 10.5374 2.07001C10.7145 2 10.9324 2 11.3681 2H12.6318C13.0676 2 13.2855 2 13.4627 2.07005C13.6877 2.15902 13.8728 2.32656 13.9838 2.54161ZM12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16Z'
      fill={color}
    />
  </svg>
)

export const SettingLine: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M14.1361 3.36144L15.1312 3.26194L14.1361 3.36144ZM13.9838 2.54161L13.095 3V3L13.9838 2.54161ZM14.4311 4.81793L15.2261 4.21141L15.2261 4.21141L14.4311 4.81793ZM15.3595 5.20248L15.2261 4.21141L15.3595 5.20248ZM16.5979 4.38113L17.2311 5.15509L17.2311 5.15509L16.5979 4.38113ZM17.2853 3.90918L17.5896 4.86175L17.2853 3.90918ZM17.9872 3.94419L18.3848 3.02663L18.3848 3.02663L17.9872 3.94419ZM18.6243 4.4822L17.9172 5.1893L17.9172 5.18931L18.6243 4.4822ZM19.5178 5.37567L20.2249 4.66856L20.2249 4.66856L19.5178 5.37567ZM20.0558 6.01275L20.9733 5.61517L20.9733 5.61516L20.0558 6.01275ZM20.0908 6.71464L21.0434 7.01895L21.0434 7.01894L20.0908 6.71464ZM19.6188 7.4021L18.8449 6.76886L18.8449 6.76886L19.6188 7.4021ZM18.7975 8.64056L17.8064 8.50724L17.8064 8.50725L18.7975 8.64056ZM19.182 9.56893L18.5755 10.364L18.5755 10.364L19.182 9.56893ZM20.6385 9.86385L20.738 8.86882L20.6385 9.86385ZM21.4584 10.0162L21.9168 9.1275L21.9168 9.1275L21.4584 10.0162ZM21.9299 10.5373L22.8599 10.1696L22.8599 10.1696L21.9299 10.5373ZM21.93 13.4626L21 13.095L21 13.095L21.93 13.4626ZM21.4583 13.9838L21.9166 14.8726L21.9166 14.8726L21.4583 13.9838ZM20.6386 14.1361L20.5391 13.1411L20.5065 13.1444L20.4742 13.1497L20.6386 14.1361ZM20.6386 14.1361L20.7381 15.1312L20.7707 15.1279L20.803 15.1225L20.6386 14.1361ZM19.1825 14.4309L18.5762 13.6357L18.5762 13.6357L19.1825 14.4309ZM18.7979 15.3596L17.8068 15.4931V15.4931L18.7979 15.3596ZM19.619 16.5976L18.845 17.2308H18.845L19.619 16.5976ZM20.0908 17.2848L19.1383 17.5892V17.5892L20.0908 17.2848ZM20.0558 17.9869L19.1383 17.5892L19.1383 17.5892L20.0558 17.9869ZM19.5179 18.6238L20.225 19.3309H20.225L19.5179 18.6238ZM18.6243 19.5174L17.9172 18.8102L17.9172 18.8103L18.6243 19.5174ZM17.9873 20.0554L18.3849 20.9729L18.3849 20.9729L17.9873 20.0554ZM17.2854 20.0904L16.981 21.0429L16.981 21.0429L17.2854 20.0904ZM16.5979 19.6184L17.2312 18.8444L17.2226 18.8376L16.5979 19.6184ZM16.5979 19.6184L15.9646 20.3924L15.9732 20.3993L16.5979 19.6184ZM15.3595 18.7971L15.4928 17.806H15.4928L15.3595 18.7971ZM14.4311 19.1816L15.2262 19.7882L15.2262 19.7881L14.4311 19.1816ZM14.1362 20.6383L13.1411 20.5388V20.5388L14.1362 20.6383ZM13.9837 21.4585L13.095 21L13.095 21L13.9837 21.4585ZM13.4628 21.9299L13.095 21L13.095 21L13.4628 21.9299ZM10.5373 21.9299L10.905 21L10.5373 21.9299ZM10.0162 21.4584L10.905 21H10.905L10.0162 21.4584ZM9.86385 20.6385L8.86882 20.7381V20.7381L9.86385 20.6385ZM9.56892 19.182L8.77387 19.7885L8.77387 19.7885L9.56892 19.182ZM8.64057 18.7975L8.50728 17.8064H8.50727L8.64057 18.7975ZM7.40208 19.6189L6.76884 18.8449L6.753 18.8579L6.73771 18.8714L7.40208 19.6189ZM7.40206 19.6189L8.0353 20.3928L8.05113 20.3799L8.06643 20.3663L7.40206 19.6189ZM6.71458 20.0908L7.01887 21.0434H7.01887L6.71458 20.0908ZM6.01272 20.0558L5.61515 20.9734H5.61515L6.01272 20.0558ZM5.37561 19.5178L6.08271 18.8107H6.08271L5.37561 19.5178ZM4.48217 18.6243L3.77506 19.3315L3.77506 19.3315L4.48217 18.6243ZM3.94414 17.9873L4.86171 17.5897L4.86171 17.5897L3.94414 17.9873ZM3.90913 17.2854L4.86171 17.5897L4.86171 17.5897L3.90913 17.2854ZM4.3811 16.5979L5.15506 17.2311H5.15506L4.3811 16.5979ZM5.20247 15.3594L6.19355 15.4928L5.20247 15.3594ZM4.81792 14.4311L5.42445 13.636L5.42445 13.636L4.81792 14.4311ZM3.36143 14.1361L3.26193 15.1312H3.26193L3.36143 14.1361ZM2.54161 13.9838L3 13.095H3L2.54161 13.9838ZM2.07005 13.4627L1.14009 13.8304L1.14009 13.8304L2.07005 13.4627ZM2.07008 10.5372L1.14017 10.1694L1.14017 10.1694L2.07008 10.5372ZM2.54152 10.0163L2.08305 9.12757L2.08305 9.12757L2.54152 10.0163ZM3.36155 9.86384V8.86384H3.31167L3.26205 8.86881L3.36155 9.86384ZM3.36156 9.86384V10.8638H3.41143L3.46106 10.8589L3.36156 9.86384ZM4.81842 9.56881L4.21178 8.77383L4.21177 8.77383L4.81842 9.56881ZM5.20287 8.64066L6.19396 8.50749L6.19396 8.50749L5.20287 8.64066ZM4.38128 7.40182L5.15523 6.76858H5.15523L4.38128 7.40182ZM3.90914 6.71405L4.86175 6.40988L4.86175 6.40988L3.90914 6.71405ZM3.94413 6.01243L3.02651 5.61498L3.02651 5.61498L3.94413 6.01243ZM4.48233 5.37509L5.18944 6.0822H5.18944L4.48233 5.37509ZM5.37565 4.48177L4.66855 3.77466V3.77466L5.37565 4.48177ZM6.01277 3.94373L5.6152 3.02615L5.6152 3.02616L6.01277 3.94373ZM6.71463 3.90872L7.01892 2.95614V2.95614L6.71463 3.90872ZM7.4022 4.38076L8.03543 3.60681V3.60681L7.4022 4.38076ZM8.64044 5.20207L8.77391 4.21101L8.64044 5.20207ZM9.56907 4.81742L8.77391 4.21101L8.77391 4.21101L9.56907 4.81742ZM9.86387 3.36131L10.8589 3.46081V3.46081L9.86387 3.36131ZM10.0162 2.5417L9.12739 2.08341L9.12739 2.08341L10.0162 2.5417ZM10.5374 2.07001L10.905 3L10.905 3L10.5374 2.07001ZM13.4627 2.07005L13.8304 1.1401V1.1401L13.4627 2.07005ZM15.1312 3.26194C15.1108 3.05831 15.0912 2.85693 15.0626 2.6868C15.0324 2.50684 14.9828 2.29705 14.8725 2.08322L13.095 3C13.0721 2.95549 13.0769 2.93878 13.0902 3.01798C13.1052 3.10701 13.1181 3.23089 13.1411 3.46094L15.1312 3.26194ZM15.2261 4.21141C15.2894 4.29433 15.2693 4.33101 15.2342 4.13595C15.2008 3.95045 15.1739 3.68915 15.1312 3.26194L13.1411 3.46094C13.1805 3.85459 13.2152 4.20895 13.2658 4.49017C13.3147 4.76184 13.4009 5.11633 13.636 5.42445L15.2261 4.21141ZM15.2261 4.21141L15.2261 4.21141L13.636 5.42444C14.0718 5.99575 14.7806 6.28935 15.4928 6.19355L15.2261 4.21141ZM15.9646 3.60717C15.6323 3.87905 15.4286 4.04481 15.2738 4.15238C15.1111 4.26548 15.1228 4.22531 15.2261 4.21141L15.4928 6.19355C15.8768 6.14188 16.1885 5.95223 16.4152 5.7947C16.6498 5.63163 16.9249 5.4056 17.2311 5.15509L15.9646 3.60717ZM16.981 2.95661C16.7518 3.02983 16.5684 3.14308 16.4198 3.24897C16.2793 3.34907 16.123 3.47759 15.9646 3.60717L17.2311 5.15509C17.41 5.00869 17.5068 4.93022 17.5803 4.87784C17.6457 4.83124 17.6373 4.84651 17.5896 4.86175L16.981 2.95661ZM18.3848 3.02663C17.9408 2.83421 17.442 2.80934 16.981 2.95661L17.5896 4.86175L17.5896 4.86175L18.3848 3.02663ZM19.3314 3.77509C19.1867 3.6304 19.044 3.48696 18.9142 3.37338C18.7768 3.25323 18.6056 3.12228 18.3848 3.02663L17.5896 4.86175C17.5437 4.84184 17.5369 4.82581 17.5973 4.87869C17.6653 4.93813 17.7537 5.02583 17.9172 5.1893L19.3314 3.77509ZM20.2249 4.66856L19.3314 3.77509L17.9172 5.18931L18.8107 6.08277L20.2249 4.66856ZM20.9733 5.61516C20.8777 5.39441 20.7467 5.22316 20.6266 5.08581C20.513 4.95597 20.3696 4.81326 20.2249 4.66856L18.8106 6.08277C18.9741 6.24626 19.0618 6.33469 19.1213 6.40264C19.1742 6.46308 19.1581 6.45629 19.1382 6.41034L20.9733 5.61516ZM21.0434 7.01894C21.1906 6.55797 21.1658 6.05922 20.9733 5.61517L19.1382 6.41034L19.1382 6.41034L21.0434 7.01894ZM20.3928 8.03534C20.5224 7.87696 20.6509 7.72069 20.751 7.58019C20.8569 7.43156 20.9701 7.24814 21.0434 7.01895L19.1382 6.41033C19.1535 6.36263 19.1687 6.35427 19.1221 6.41968C19.0697 6.4932 18.9913 6.58992 18.8449 6.76886L20.3928 8.03534ZM19.7885 8.77387C19.7746 8.87723 19.7345 8.88894 19.8476 8.72619C19.9551 8.57141 20.1209 8.36764 20.3928 8.03534L18.8449 6.76886C18.5943 7.07506 18.3683 7.35016 18.2052 7.58481C18.0477 7.81148 17.8581 8.12317 17.8064 8.50724L19.7885 8.77387ZM19.7885 8.77387V8.77386L17.8064 8.50725C17.7106 9.21938 18.0042 9.92816 18.5755 10.364L19.7885 8.77387ZM20.738 8.86882C20.3108 8.82609 20.0495 8.79922 19.864 8.76584C19.6689 8.73073 19.7056 8.7106 19.7885 8.77387L18.5755 10.364C18.8836 10.599 19.2381 10.6853 19.5098 10.7342C19.791 10.7848 20.1454 10.8195 20.539 10.8589L20.738 8.86882ZM21.9168 9.1275C21.703 9.01721 21.4932 8.96759 21.3132 8.93737C21.1431 8.9088 20.9417 8.88918 20.738 8.86882L20.539 10.8589C20.7691 10.8819 20.893 10.8948 20.982 10.9098C21.0612 10.9231 21.0445 10.9279 21 10.905L21.9168 9.1275ZM22.8599 10.1696C22.682 9.71957 22.3469 9.34933 21.9168 9.1275L21 10.905L21 10.905L22.8599 10.1696ZM23 11.3682C23 11.1636 23.0005 10.9613 22.989 10.7891C22.9769 10.607 22.9484 10.3933 22.8599 10.1696L21 10.905C20.9816 10.8584 20.9881 10.8423 20.9935 10.9224C20.9995 11.0125 21 11.137 21 11.3682H23ZM23 12.6319V11.3682H21V12.6319H23ZM22.86 13.8302C22.9484 13.6065 22.9769 13.3929 22.989 13.2108C23.0005 13.0388 23 12.8365 23 12.6319H21C21 12.863 20.9995 12.9875 20.9935 13.0776C20.9881 13.1577 20.9816 13.1416 21 13.095L22.86 13.8302ZM21.9166 14.8726C22.3469 14.6507 22.682 14.2804 22.86 13.8302L21 13.095V13.095L21.9166 14.8726ZM20.7381 15.1312C20.9417 15.1108 21.1431 15.0912 21.3132 15.0626C21.4931 15.0324 21.7028 14.9828 21.9166 14.8726L21 13.095C21.0445 13.0721 21.0612 13.077 20.982 13.0902C20.893 13.1052 20.7691 13.1181 20.5391 13.1411L20.7381 15.1312ZM20.803 15.1225L20.803 15.1225L20.4742 13.1497L20.4742 13.1497L20.803 15.1225ZM19.7889 15.2261C19.706 15.2893 19.6693 15.2692 19.8644 15.2341C20.0498 15.2007 20.311 15.1739 20.7381 15.1312L20.5391 13.1411C20.1456 13.1805 19.7913 13.2151 19.5102 13.2657C19.2386 13.3146 18.8842 13.4008 18.5762 13.6357L19.7889 15.2261ZM19.7889 15.2261L19.7889 15.2261L18.5762 13.6357C18.0046 14.0716 17.7108 14.7807 17.8068 15.4931L19.7889 15.2261ZM20.3929 15.9643C20.1212 15.6322 19.9555 15.4285 19.8479 15.2738C19.7348 15.1111 19.775 15.1228 19.7889 15.2261L17.8068 15.4931C17.8585 15.877 18.0481 16.1886 18.2056 16.4152C18.3686 16.6497 18.5946 16.9247 18.845 17.2308L20.3929 15.9643ZM21.0433 16.9803C20.9701 16.7513 20.8569 16.5679 20.751 16.4193C20.651 16.2789 20.5225 16.1227 20.3929 15.9643L18.845 17.2308C18.9914 17.4097 19.0698 17.5064 19.1222 17.5799C19.1688 17.6453 19.1535 17.6369 19.1383 17.5892L21.0433 16.9803ZM20.9733 18.3846C21.1658 17.9404 21.1907 17.4415 21.0433 16.9803L19.1383 17.5892L19.1383 17.5892L20.9733 18.3846ZM20.225 19.3309C20.3697 19.1862 20.5131 19.0436 20.6266 18.9138C20.7467 18.7765 20.8776 18.6053 20.9733 18.3846L19.1383 17.5892C19.1582 17.5433 19.1742 17.5365 19.1213 17.5969C19.0619 17.6648 18.9742 17.7532 18.8108 17.9167L20.225 19.3309ZM19.3314 20.2245L20.225 19.3309L18.8108 17.9167L17.9172 18.8102L19.3314 20.2245ZM18.3849 20.9729C18.6056 20.8773 18.7769 20.7463 18.9142 20.6262C19.044 20.5126 19.1867 20.3692 19.3314 20.2245L17.9172 18.8103C17.7537 18.9737 17.6653 19.0614 17.5974 19.1209C17.5369 19.1737 17.5437 19.1577 17.5897 19.1378L18.3849 20.9729ZM16.981 21.0429C17.442 21.1902 17.9408 21.1653 18.3849 20.9729L17.5897 19.1378H17.5897L16.981 21.0429ZM15.9647 20.3924C16.1231 20.522 16.2793 20.6505 16.4198 20.7506C16.5684 20.8565 16.7519 20.9697 16.981 21.0429L17.5897 19.1378C17.6374 19.153 17.6457 19.1683 17.5803 19.1217C17.5068 19.0693 17.4101 18.9909 17.2312 18.8445L15.9647 20.3924ZM15.9732 20.3993L15.9732 20.3993L17.2226 18.8376L17.2226 18.8375L15.9732 20.3993ZM15.2262 19.7881C15.1228 19.7742 15.1111 19.7341 15.2738 19.8472C15.4286 19.9547 15.6324 20.1205 15.9647 20.3924L17.2311 18.8445C16.925 18.5939 16.6499 18.3679 16.4152 18.2048C16.1886 18.0473 15.8769 17.8577 15.4928 17.806L15.2262 19.7881ZM15.2262 19.7881H15.2262L15.4928 17.806C14.7807 17.7102 14.0719 18.0038 13.636 18.5751L15.2262 19.7881ZM15.1312 20.7378C15.1739 20.3105 15.2008 20.0492 15.2342 19.8636C15.2693 19.6685 15.2894 19.7052 15.2262 19.7882L13.636 18.5751C13.401 18.8832 13.3147 19.2378 13.2658 19.5094C13.2152 19.7907 13.1805 20.1451 13.1411 20.5388L15.1312 20.7378ZM14.8724 21.917C14.9828 21.7031 15.0324 21.4932 15.0626 21.3132C15.0912 21.143 15.1108 20.9415 15.1312 20.7378L13.1411 20.5388C13.1181 20.769 13.1052 20.8929 13.0902 20.982C13.0769 21.0612 13.072 21.0445 13.095 21L14.8724 21.917ZM13.8306 22.8598C14.2805 22.6819 14.6506 22.3469 14.8724 21.917L13.095 21L13.095 21L13.8306 22.8598ZM12.6316 23C12.8363 23 13.0387 23.0005 13.2109 22.989C13.393 22.9768 13.6068 22.9483 13.8306 22.8598L13.095 21C13.1416 20.9816 13.1577 20.9881 13.0776 20.9935C12.9875 20.9995 12.8629 21 12.6316 21V23ZM11.3682 23H12.6316V21H11.3682V23ZM10.1696 22.8599C10.3933 22.9484 10.607 22.9769 10.7891 22.989C10.9613 23.0005 11.1636 23 11.3682 23V21C11.137 21 11.0125 20.9995 10.9224 20.9935C10.8423 20.9881 10.8584 20.9816 10.905 21L10.1696 22.8599ZM9.1275 21.9168C9.34933 22.3469 9.71958 22.682 10.1696 22.8599L10.905 21L9.1275 21.9168ZM8.86882 20.7381C8.88918 20.9417 8.9088 21.1431 8.93737 21.3132C8.96759 21.4932 9.01721 21.703 9.1275 21.9168L10.905 21C10.9279 21.0445 10.9231 21.0612 10.9098 20.982C10.8948 20.893 10.8819 20.7691 10.8589 20.539L8.86882 20.7381ZM8.77387 19.7885C8.7106 19.7056 8.73073 19.6689 8.76584 19.864C8.79922 20.0495 8.82609 20.3108 8.86882 20.7381L10.8589 20.539C10.8195 20.1454 10.7848 19.791 10.7342 19.5098C10.6853 19.2381 10.599 18.8836 10.364 18.5755L8.77387 19.7885ZM8.77387 19.7885L10.364 18.5755C9.92815 18.0042 9.21939 17.7106 8.50728 17.8064L8.77387 19.7885ZM8.03531 20.3928C8.36763 20.1209 8.5714 19.9551 8.72619 19.8476C8.88895 19.7345 8.87724 19.7746 8.77387 19.7885L8.50727 17.8064C8.12318 17.858 7.81149 18.0477 7.58481 18.2052C7.35015 18.3683 7.07504 18.5944 6.76884 18.8449L8.03531 20.3928ZM8.06643 20.3663L8.06644 20.3663L6.73771 18.8714L6.7377 18.8715L8.06643 20.3663ZM7.01887 21.0434C7.24807 20.9702 7.4315 20.8569 7.58013 20.751C7.72064 20.6509 7.87691 20.5224 8.0353 20.3928L6.76883 18.8449C6.58988 18.9913 6.49316 19.0698 6.41963 19.1222C6.35422 19.1688 6.36258 19.1535 6.41029 19.1383L7.01887 21.0434ZM5.61515 20.9734C6.05919 21.1658 6.55791 21.1907 7.01887 21.0434L6.41029 19.1383L6.41029 19.1383L5.61515 20.9734ZM4.6685 20.2249C4.81321 20.3696 4.95592 20.513 5.08577 20.6266C5.22313 20.7468 5.39438 20.8777 5.61515 20.9734L6.41029 19.1383C6.45624 19.1582 6.46304 19.1742 6.40259 19.1213C6.33464 19.0619 6.2462 18.9742 6.08271 18.8107L4.6685 20.2249ZM3.77506 19.3315L4.6685 20.2249L6.08271 18.8107L5.18927 17.9172L3.77506 19.3315ZM3.02657 18.3848C3.12223 18.6056 3.25318 18.7768 3.37333 18.9142C3.48692 19.044 3.63036 19.1868 3.77506 19.3315L5.18928 17.9172C5.02579 17.7538 4.93809 17.6653 4.87864 17.5974C4.82577 17.5369 4.8418 17.5437 4.86171 17.5897L3.02657 18.3848ZM2.95656 16.9811C2.8093 17.4421 2.83417 17.9408 3.02657 18.3848L4.86171 17.5897V17.5897L2.95656 16.9811ZM3.60715 15.9647C3.47756 16.123 3.34903 16.2793 3.24892 16.4198C3.14303 16.5684 3.02977 16.7519 2.95656 16.9811L4.86171 17.5897C4.84647 17.6374 4.83119 17.6457 4.87779 17.5803C4.93018 17.5068 5.00865 17.4101 5.15506 17.2311L3.60715 15.9647ZM4.2114 15.2261C4.2253 15.1228 4.26548 15.1111 4.15237 15.2738C4.0448 15.4286 3.87903 15.6324 3.60715 15.9647L5.15506 17.2311C5.40558 16.9249 5.63162 16.6498 5.79469 16.4152C5.95222 16.1885 6.14188 15.8768 6.19355 15.4928L4.2114 15.2261ZM4.2114 15.2261L4.2114 15.2261L6.19355 15.4928C6.28934 14.7806 5.99575 14.0718 5.42445 13.636L4.2114 15.2261ZM3.26193 15.1312C3.68915 15.1739 3.95044 15.2008 4.13595 15.2342C4.33101 15.2693 4.29432 15.2894 4.2114 15.2261L5.42445 13.636C5.11633 13.4009 4.76184 13.3147 4.49017 13.2658C4.20894 13.2152 3.85458 13.1805 3.46093 13.1411L3.26193 15.1312ZM2.08323 14.8725C2.29705 14.9828 2.50683 15.0324 2.6868 15.0626C2.85693 15.0912 3.05831 15.1108 3.26193 15.1312L3.46094 13.1411C3.23089 13.1181 3.10701 13.1052 3.01798 13.0902C2.93878 13.0769 2.95549 13.0721 3 13.095L2.08323 14.8725ZM1.14009 13.8304C1.31803 14.2804 1.65311 14.6507 2.08323 14.8725L3 13.095H3L1.14009 13.8304ZM1 12.6318C1 12.8364 0.999483 13.0387 1.01098 13.2109C1.02314 13.393 1.05163 13.6066 1.14009 13.8304L3 13.095C3.01841 13.1416 3.01188 13.1577 3.00653 13.0776C3.00052 12.9875 3 12.863 3 12.6318H1ZM1 11.3683V12.6318H3V11.3683H1ZM1.14017 10.1694C1.05166 10.3932 1.02315 10.607 1.01098 10.7891C0.999483 10.9613 1 11.1637 1 11.3683H3C3 11.1371 3.00052 11.0125 3.00654 10.9224C3.01189 10.8423 3.01842 10.8584 3 10.905L1.14017 10.1694ZM2.08305 9.12757C1.65308 9.34939 1.3181 9.71954 1.14017 10.1694L3 10.905L3 10.905L2.08305 9.12757ZM3.26205 8.86881C3.05837 8.88917 2.85694 8.9088 2.68677 8.93737C2.50676 8.9676 2.29692 9.01724 2.08305 9.12757L3 10.905C2.95548 10.928 2.93877 10.9231 3.01798 10.9098C3.10704 10.8948 3.23094 10.8819 3.46105 10.8589L3.26205 8.86881ZM3.36155 8.86384H3.36155V10.8638H3.36155V8.86384ZM3.36156 8.86384H3.36155V10.8638H3.36156V8.86384ZM4.21177 8.77383C4.29471 8.71055 4.33141 8.73069 4.1363 8.7658C3.95075 8.7992 3.68939 8.82607 3.26205 8.86881L3.46106 10.8589C3.85482 10.8195 4.20927 10.7848 4.49056 10.7342C4.76231 10.6853 5.1169 10.5989 5.42506 10.3638L4.21177 8.77383ZM4.21177 8.77383L4.21178 8.77383L5.42506 10.3638C5.99613 9.92801 6.28962 9.21944 6.19396 8.50749L4.21177 8.77383ZM3.60732 8.03506C3.87929 8.36746 4.04511 8.5713 4.15272 8.72614C4.26586 8.88895 4.22567 8.87724 4.21177 8.77383L6.19396 8.50749C6.14234 8.1233 5.95263 7.81151 5.79506 7.58478C5.63195 7.35006 5.40584 7.07487 5.15523 6.76858L3.60732 8.03506ZM2.95652 7.01822C3.02973 7.24751 3.14303 7.43102 3.24896 7.5797C3.3491 7.72027 3.47768 7.8766 3.60732 8.03506L5.15523 6.76858C5.00876 6.58956 4.93026 6.49279 4.87785 6.41923C4.83123 6.35379 4.84651 6.36215 4.86175 6.40988L2.95652 7.01822ZM3.02651 5.61498C2.83424 6.05887 2.80938 6.5574 2.95652 7.01822L4.86175 6.40988L3.02651 5.61498ZM3.77523 4.66798C3.63047 4.81274 3.48698 4.9555 3.37335 5.08539C3.25316 5.2228 3.12217 5.39412 3.02651 5.61498L4.86175 6.40988C4.84184 6.45585 4.8258 6.46265 4.8787 6.40219C4.93816 6.33421 5.02589 6.24574 5.18944 6.0822L3.77523 4.66798ZM4.66855 3.77466L3.77523 4.66798L5.18944 6.0822L6.08276 5.18888L4.66855 3.77466ZM4.66855 3.77466L4.66855 3.77466L6.08276 5.18888L6.08276 5.18887L4.66855 3.77466ZM5.6152 3.02616C5.39443 3.12181 5.22317 3.25276 5.08582 3.37292C4.95597 3.48651 4.81325 3.62995 4.66855 3.77466L6.08276 5.18887C6.24625 5.02538 6.33469 4.93768 6.40264 4.87824C6.46309 4.82536 6.45629 4.84139 6.41034 4.8613L5.6152 3.02616ZM7.01892 2.95614C6.55795 2.80889 6.05923 2.83377 5.6152 3.02615L6.41033 4.8613H6.41034L7.01892 2.95614ZM8.03543 3.60681C7.87702 3.47719 7.72073 3.34865 7.58021 3.24853C7.43158 3.14264 7.24813 3.02936 7.01892 2.95614L6.41034 4.8613C6.36262 4.84606 6.35426 4.83078 6.41969 4.8774C6.49324 4.9298 6.58999 5.00829 6.76896 5.15472L8.03543 3.60681ZM8.77391 4.21101C8.87727 4.22493 8.88897 4.26509 8.72621 4.15198C8.57144 4.04441 8.36769 3.87865 8.03543 3.60681L6.76896 5.15472C7.07512 5.40521 7.35018 5.63122 7.58477 5.79427C7.81138 5.95176 8.123 6.14141 8.50697 6.19312L8.77391 4.21101ZM8.77391 4.21101L8.77391 4.21101L8.50697 6.19312C9.21932 6.28905 9.92836 5.99536 10.3642 5.42382L8.77391 4.21101ZM8.86883 3.2618C8.82612 3.6889 8.79926 3.95012 8.76589 4.13558C8.7308 4.33059 8.71068 4.29392 8.77391 4.21101L10.3642 5.42382C10.5992 5.11576 10.6854 4.76136 10.7343 4.48976C10.7849 4.20861 10.8196 3.85435 10.8589 3.46081L8.86883 3.2618ZM9.12739 2.08341C9.01716 2.29719 8.96756 2.50692 8.93736 2.68683C8.9088 2.85692 8.88919 3.05824 8.86883 3.2618L10.8589 3.46081C10.8819 3.23082 10.8948 3.10698 10.9098 3.01798C10.923 2.9388 10.9279 2.9555 10.905 3L9.12739 2.08341ZM10.1698 1.14002C9.71962 1.31796 9.34924 1.65315 9.12739 2.08341L10.905 3L10.905 3L10.1698 1.14002ZM11.3681 1C11.1635 1 10.9612 0.999483 10.7892 1.01097C10.6071 1.02313 10.3935 1.05161 10.1698 1.14002L10.905 3C10.8584 3.0184 10.8423 3.01188 10.9224 3.00653C11.0125 3.00052 11.137 3 11.3681 3V1ZM12.6318 1H11.3681V3H12.6318V1ZM13.8304 1.1401C13.6066 1.05163 13.393 1.02314 13.2109 1.01098C13.0387 0.999483 12.8364 1 12.6318 1V3C12.863 3 12.9875 3.00052 13.0776 3.00653C13.1577 3.01188 13.1416 3.01841 13.095 3L13.8304 1.1401ZM14.8725 2.08322C14.6507 1.65312 14.2804 1.31803 13.8304 1.1401L13.095 3L13.095 3L14.8725 2.08322ZM15 12C15 13.6569 13.6569 15 12 15V17C14.7614 17 17 14.7614 17 12H15ZM12 9C13.6569 9 15 10.3431 15 12H17C17 9.23858 14.7614 7 12 7V9ZM9 12C9 10.3431 10.3431 9 12 9V7C9.23858 7 7 9.23858 7 12H9ZM12 15C10.3431 15 9 13.6569 9 12H7C7 14.7614 9.23858 17 12 17V15Z'
      fill={color}
    />
  </svg>
)

export const SettingLineDuotone: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M14.1361 3.36144C14.0928 2.92777 14.0711 2.71093 13.9838 2.54161C13.8728 2.32656 13.6877 2.15902 13.4627 2.07005C13.2855 2 13.0676 2 12.6318 2H11.3681C10.9324 2 10.7145 2 10.5374 2.07001C10.3123 2.15898 10.1271 2.32658 10.0162 2.5417C9.9289 2.71098 9.90722 2.92776 9.86387 3.36131C9.78181 4.18195 9.74077 4.59227 9.56907 4.81742C9.35113 5.10319 8.99661 5.25003 8.64044 5.20207C8.35982 5.16427 8.04061 4.9031 7.4022 4.38076C7.06481 4.10472 6.89612 3.9667 6.71463 3.90872C6.48414 3.8351 6.23478 3.84753 6.01277 3.94373C5.83795 4.01947 5.68385 4.17357 5.37565 4.48177L4.48233 5.37509C4.17403 5.68339 4.01988 5.83754 3.94413 6.01243C3.848 6.23438 3.83557 6.48364 3.90914 6.71405C3.96711 6.89561 4.10516 7.06435 4.38128 7.40182C4.90385 8.04052 5.16514 8.35987 5.20287 8.64066C5.2507 8.99664 5.10395 9.35092 4.81842 9.56881C4.59319 9.74068 4.18264 9.78173 3.36155 9.86384C2.92777 9.90722 2.71088 9.92891 2.54152 10.0163C2.32654 10.1272 2.15905 10.3123 2.07008 10.5372C2 10.7144 2 10.9324 2 11.3683V12.6318C2 13.0676 2 13.2855 2.07005 13.4627C2.15902 13.6877 2.32656 13.8728 2.54161 13.9838C2.71093 14.0711 2.92776 14.0928 3.36143 14.1361C4.1823 14.2182 4.59273 14.2593 4.81792 14.4311C5.10357 14.649 5.25037 15.0034 5.20247 15.3594C5.16471 15.6402 4.90351 15.9594 4.3811 16.5979C4.10511 16.9352 3.96711 17.1039 3.90913 17.2854C3.8355 17.5159 3.84794 17.7652 3.94414 17.9873C4.01988 18.1621 4.17398 18.3162 4.48217 18.6243L5.37561 19.5178C5.6838 19.826 5.8379 19.9801 6.01272 20.0558C6.23474 20.152 6.4841 20.1645 6.71458 20.0908C6.89607 20.0329 7.06474 19.8949 7.40208 19.6189C8.04059 19.0964 8.35985 18.8352 8.64057 18.7975C8.99663 18.7496 9.35101 18.8964 9.56892 19.182C9.74072 19.4072 9.78176 19.8176 9.86385 20.6385C9.90722 21.0722 9.92891 21.2891 10.0162 21.4584C10.1272 21.6734 10.3123 21.841 10.5373 21.9299C10.7145 22 10.9324 22 11.3682 22H12.6316C13.0676 22 13.2856 22 13.4628 21.9299C13.6877 21.8409 13.8728 21.6735 13.9837 21.4585C14.0711 21.2891 14.0928 21.0722 14.1362 20.6383C14.2183 19.8173 14.2593 19.4068 14.4311 19.1816C14.649 18.896 15.0034 18.7492 15.3595 18.7971C15.6402 18.8348 15.9594 19.096 16.5979 19.6184C16.9352 19.8944 17.1039 20.0324 17.2854 20.0904C17.5159 20.164 17.7652 20.1516 17.9873 20.0554C18.1621 19.9796 18.3162 19.8255 18.6243 19.5174L19.5179 18.6238C19.826 18.3157 19.98 18.1617 20.0558 17.9869C20.152 17.7648 20.1645 17.5154 20.0908 17.2848C20.0328 17.1034 19.8949 16.9348 19.619 16.5976C19.0968 15.9593 18.8357 15.6402 18.7979 15.3596C18.7499 15.0034 18.8967 14.6489 19.1825 14.4309C19.4077 14.2592 19.818 14.2182 20.6386 14.1361C21.0722 14.0928 21.289 14.0711 21.4583 13.9838C21.6734 13.8729 21.841 13.6877 21.93 13.4626C22 13.2855 22 13.0676 22 12.6319V11.3682C22 10.9324 22 10.7145 21.9299 10.5373C21.841 10.3123 21.6734 10.1272 21.4584 10.0162C21.2891 9.92891 21.0722 9.90722 20.6385 9.86385C19.8176 9.78176 19.4072 9.74072 19.182 9.56893C18.8964 9.35102 18.7496 8.99662 18.7975 8.64056C18.8352 8.35984 19.0964 8.0406 19.6188 7.4021C19.8948 7.06478 20.0328 6.89612 20.0908 6.71464C20.1644 6.48415 20.152 6.23478 20.0558 6.01275C19.98 5.83794 19.8259 5.68385 19.5178 5.37567L18.6243 4.4822C18.3161 4.17402 18.162 4.01994 17.9872 3.94419C17.7652 3.84798 17.5158 3.83555 17.2853 3.90918C17.1038 3.96716 16.9352 4.10515 16.5979 4.38113C15.9594 4.90352 15.6402 5.16472 15.3595 5.20248C15.0034 5.25038 14.649 5.10358 14.4311 4.81793C14.2593 4.59274 14.2182 4.1823 14.1361 3.36144Z'
      fill={color}
      fillOpacity='0.25'
    />
    <circle cx='12' cy='12' r='3' fill={color} />
  </svg>
)

export const SettingLineDuotoneLine: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M13.9838 2.54161C14.0711 2.71093 14.0928 2.92777 14.1361 3.36144C14.2182 4.1823 14.2593 4.59274 14.4311 4.81793C14.649 5.10358 15.0034 5.25038 15.3595 5.20248C15.6402 5.16472 15.9594 4.90352 16.5979 4.38113C16.9352 4.10515 17.1038 3.96716 17.2853 3.90918C17.5158 3.83555 17.7652 3.84798 17.9872 3.94419C18.162 4.01994 18.3161 4.17402 18.6243 4.4822L19.5178 5.37567C19.8259 5.68385 19.98 5.83794 20.0558 6.01275C20.152 6.23478 20.1644 6.48415 20.0908 6.71464C20.0328 6.89612 19.8948 7.06478 19.6188 7.4021C19.0964 8.0406 18.8352 8.35984 18.7975 8.64056C18.7496 8.99662 18.8964 9.35102 19.182 9.56893C19.4072 9.74072 19.8176 9.78176 20.6385 9.86385C21.0722 9.90722 21.2891 9.92891 21.4584 10.0162C21.6734 10.1272 21.841 10.3123 21.9299 10.5373C22 10.7145 22 10.9324 22 11.3682V12.6319C22 13.0676 22 13.2855 21.93 13.4626C21.841 13.6877 21.6734 13.8729 21.4583 13.9838C21.289 14.0711 21.0722 14.0928 20.6386 14.1361L20.6386 14.1361C19.818 14.2182 19.4077 14.2592 19.1825 14.4309C18.8967 14.6489 18.7499 15.0034 18.7979 15.3596C18.8357 15.6402 19.0968 15.9593 19.619 16.5976C19.8949 16.9348 20.0328 17.1034 20.0908 17.2848C20.1645 17.5154 20.152 17.7648 20.0558 17.9869C19.98 18.1617 19.826 18.3157 19.5179 18.6238L18.6243 19.5174C18.3162 19.8255 18.1621 19.9796 17.9873 20.0554C17.7652 20.1516 17.5159 20.164 17.2854 20.0904C17.1039 20.0324 16.9352 19.8944 16.5979 19.6184L16.5979 19.6184C15.9594 19.096 15.6402 18.8348 15.3595 18.7971C15.0034 18.7492 14.649 18.896 14.4311 19.1816C14.2593 19.4068 14.2183 19.8173 14.1362 20.6383C14.0928 21.0722 14.0711 21.2891 13.9837 21.4585C13.8728 21.6735 13.6877 21.8409 13.4628 21.9299C13.2856 22 13.0676 22 12.6316 22H11.3682C10.9324 22 10.7145 22 10.5373 21.9299C10.3123 21.841 10.1272 21.6734 10.0162 21.4584C9.92891 21.2891 9.90722 21.0722 9.86385 20.6385C9.78176 19.8176 9.74072 19.4072 9.56892 19.182C9.35101 18.8964 8.99663 18.7496 8.64057 18.7975C8.35985 18.8352 8.04059 19.0964 7.40208 19.6189L7.40206 19.6189C7.06473 19.8949 6.89607 20.0329 6.71458 20.0908C6.4841 20.1645 6.23474 20.152 6.01272 20.0558C5.8379 19.9801 5.6838 19.826 5.37561 19.5178L4.48217 18.6243C4.17398 18.3162 4.01988 18.1621 3.94414 17.9873C3.84794 17.7652 3.8355 17.5159 3.90913 17.2854C3.96711 17.1039 4.10511 16.9352 4.3811 16.5979C4.90351 15.9594 5.16471 15.6402 5.20247 15.3594C5.25037 15.0034 5.10357 14.649 4.81792 14.4311C4.59273 14.2593 4.1823 14.2182 3.36143 14.1361C2.92776 14.0928 2.71093 14.0711 2.54161 13.9838C2.32656 13.8728 2.15902 13.6877 2.07005 13.4627C2 13.2855 2 13.0676 2 12.6318V11.3683C2 10.9324 2 10.7144 2.07008 10.5372C2.15905 10.3123 2.32654 10.1272 2.54152 10.0163C2.71088 9.92891 2.92777 9.90722 3.36155 9.86384H3.36155H3.36156C4.18264 9.78173 4.59319 9.74068 4.81842 9.56881C5.10395 9.35092 5.2507 8.99664 5.20287 8.64066C5.16514 8.35987 4.90385 8.04052 4.38128 7.40182C4.10516 7.06435 3.96711 6.89561 3.90914 6.71405C3.83557 6.48364 3.848 6.23438 3.94413 6.01243C4.01988 5.83754 4.17403 5.68339 4.48233 5.37509L5.37565 4.48177L5.37566 4.48177C5.68385 4.17357 5.83795 4.01947 6.01277 3.94373C6.23478 3.84753 6.48414 3.8351 6.71463 3.90872C6.89612 3.9667 7.06481 4.10472 7.4022 4.38076C8.04061 4.9031 8.35982 5.16427 8.64044 5.20207C8.99661 5.25003 9.35113 5.10319 9.56907 4.81742C9.74077 4.59227 9.78181 4.18195 9.86387 3.36131C9.90722 2.92776 9.9289 2.71098 10.0162 2.5417C10.1271 2.32658 10.3123 2.15898 10.5374 2.07001C10.7145 2 10.9324 2 11.3681 2H12.6318C13.0676 2 13.2855 2 13.4627 2.07005C13.6877 2.15902 13.8728 2.32656 13.9838 2.54161ZM12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16Z'
      fill={color}
      fillOpacity='0.25'
    />
    <path
      d='M14.1361 3.36144L14.7332 3.30174L14.1361 3.36144ZM13.9838 2.54161L13.4505 2.81664V2.81664L13.9838 2.54161ZM14.4311 4.81793L14.9081 4.45401L14.9081 4.45401L14.4311 4.81793ZM15.3595 5.20248L15.2795 4.60783L15.2795 4.60783L15.3595 5.20248ZM16.5979 4.38113L16.9778 4.8455L16.9778 4.8455L16.5979 4.38113ZM17.2853 3.90918L17.4679 4.48073L17.2853 3.90918ZM17.9872 3.94419L18.2258 3.39365L18.2258 3.39365L17.9872 3.94419ZM18.6243 4.4822L18.2 4.90646L18.2 4.90646L18.6243 4.4822ZM19.5178 5.37567L19.942 4.9514L19.942 4.9514L19.5178 5.37567ZM20.0558 6.01275L20.6063 5.7742V5.7742L20.0558 6.01275ZM20.0908 6.71464L20.6623 6.89723V6.89722L20.0908 6.71464ZM19.6188 7.4021L19.1545 7.02216V7.02216L19.6188 7.4021ZM18.7975 8.64056L18.2028 8.56057V8.56057L18.7975 8.64056ZM19.182 9.56893L18.8181 10.046L18.8181 10.046L19.182 9.56893ZM20.6385 9.86385L20.6982 9.26683L20.6385 9.86385ZM21.4584 10.0162L21.7334 9.483L21.7334 9.483L21.4584 10.0162ZM21.9299 10.5373L22.4879 10.3167V10.3167L21.9299 10.5373ZM21.93 13.4626L21.372 13.2421L21.372 13.2421L21.93 13.4626ZM21.4583 13.9838L21.7333 14.5171H21.7333L21.4583 13.9838ZM20.6386 14.1361L20.5789 13.5391L20.5594 13.5411L20.54 13.5443L20.6386 14.1361ZM20.6386 14.1361L20.6983 14.7332L20.7179 14.7312L20.7372 14.728L20.6386 14.1361ZM19.1825 14.4309L18.8187 13.9538H18.8187L19.1825 14.4309ZM18.7979 15.3596L18.2032 15.4397V15.4397L18.7979 15.3596ZM19.619 16.5976L19.1546 16.9775L19.619 16.5976ZM20.0908 17.2848L19.5193 17.4674V17.4674L20.0908 17.2848ZM20.0558 17.9869L19.5053 17.7483L19.5053 17.7483L20.0558 17.9869ZM19.5179 18.6238L19.9422 19.048H19.9422L19.5179 18.6238ZM18.6243 19.5174L18.2001 19.0931L18.2001 19.0931L18.6243 19.5174ZM17.9873 20.0554L18.2258 20.6059L18.2258 20.6059L17.9873 20.0554ZM17.2854 20.0904L17.1028 20.6619H17.1028L17.2854 20.0904ZM16.5979 19.6184L16.9779 19.154L16.9727 19.1499L16.5979 19.6184ZM16.5979 19.6184L16.2179 20.0828L16.2231 20.0869L16.5979 19.6184ZM15.3595 18.7971L15.4395 18.2024H15.4395L15.3595 18.7971ZM14.4311 19.1816L14.9081 19.5455L14.9081 19.5455L14.4311 19.1816ZM14.1362 20.6383L13.5391 20.5786L14.1362 20.6383ZM13.9837 21.4585L13.4505 21.1834L13.4505 21.1834L13.9837 21.4585ZM13.4628 21.9299L13.2421 21.372H13.2421L13.4628 21.9299ZM10.5373 21.9299L10.7579 21.372L10.5373 21.9299ZM10.0162 21.4584L10.5495 21.1834L10.5495 21.1834L10.0162 21.4584ZM9.86385 20.6385L9.26683 20.6983L9.86385 20.6385ZM9.56892 19.182L9.09189 19.5459L9.09189 19.5459L9.56892 19.182ZM8.64057 18.7975L8.56059 18.2028H8.56059L8.64057 18.7975ZM7.40208 19.6189L7.02213 19.1545L7.01263 19.1623L7.00346 19.1704L7.40208 19.6189ZM7.40206 19.6189L7.782 20.0832L7.79151 20.0755L7.80068 20.0673L7.40206 19.6189ZM6.71458 20.0908L6.89716 20.6624V20.6624L6.71458 20.0908ZM6.01272 20.0558L5.77418 20.6064H5.77418L6.01272 20.0558ZM5.37561 19.5178L5.79987 19.0935H5.79987L5.37561 19.5178ZM4.48217 18.6243L4.0579 19.0486L4.0579 19.0486L4.48217 18.6243ZM3.94414 17.9873L4.49468 17.7487L3.94414 17.9873ZM3.90913 17.2854L4.48068 17.468H4.48068L3.90913 17.2854ZM4.3811 16.5979L4.84548 16.9778H4.84548L4.3811 16.5979ZM5.20247 15.3594L5.79712 15.4394V15.4394L5.20247 15.3594ZM4.81792 14.4311L5.18184 13.954L5.18184 13.954L4.81792 14.4311ZM3.36143 14.1361L3.30173 14.7332H3.30173L3.36143 14.1361ZM2.54161 13.9838L2.81664 13.4505H2.81664L2.54161 13.9838ZM2.07005 13.4627L1.51208 13.6833H1.51208L2.07005 13.4627ZM2.07008 10.5372L1.51213 10.3166L1.51213 10.3166L2.07008 10.5372ZM2.54152 10.0163L2.26644 9.48306L2.26644 9.48306L2.54152 10.0163ZM3.36155 9.86384V9.26384H3.33162L3.30185 9.26682L3.36155 9.86384ZM3.36156 9.86384V10.4638H3.39148L3.42126 10.4609L3.36156 9.86384ZM4.81842 9.56881L4.45443 9.09182L4.45443 9.09182L4.81842 9.56881ZM5.20287 8.64066L5.79752 8.56076V8.56076L5.20287 8.64066ZM4.38128 7.40182L4.84565 7.02188L4.84565 7.02188L4.38128 7.40182ZM3.90914 6.71405L4.48071 6.53155L3.90914 6.71405ZM3.94413 6.01243L3.39356 5.77396L3.39356 5.77396L3.94413 6.01243ZM4.48233 5.37509L4.9066 5.79935L4.9066 5.79935L4.48233 5.37509ZM5.37565 4.48177L4.95139 4.0575V4.0575L5.37565 4.48177ZM6.01277 3.94373L5.77423 3.39318H5.77423L6.01277 3.94373ZM6.71463 3.90872L6.8972 3.33717L6.71463 3.90872ZM7.4022 4.38076L7.78214 3.91639L7.78214 3.91639L7.4022 4.38076ZM8.64044 5.20207L8.72052 4.60743L8.64044 5.20207ZM9.56907 4.81742L9.09197 4.45358V4.45358L9.56907 4.81742ZM9.86387 3.36131L10.4609 3.42101V3.42101L9.86387 3.36131ZM10.0162 2.5417L9.48291 2.26673L9.48291 2.26673L10.0162 2.5417ZM10.5374 2.07001L10.758 2.628L10.758 2.628L10.5374 2.07001ZM13.4627 2.07005L13.6833 1.51208L13.6833 1.51208L13.4627 2.07005ZM14.7332 3.30174C14.7123 3.09283 14.694 2.90695 14.6682 2.75304C14.6413 2.59322 14.6007 2.42874 14.517 2.26658L13.4505 2.81664C13.4542 2.8238 13.468 2.85239 13.4847 2.95175C13.5024 3.057 13.5166 3.19638 13.5391 3.42114L14.7332 3.30174ZM14.9081 4.45401C14.9117 4.45873 14.8783 4.41718 14.8405 4.20679C14.8037 4.00215 14.7752 3.72224 14.7332 3.30174L13.5391 3.42114C13.5792 3.8215 13.6123 4.15725 13.6594 4.41933C13.7056 4.67567 13.7786 4.95193 13.954 5.18184L14.9081 4.45401ZM15.2795 4.60783C15.137 4.627 14.9953 4.56828 14.9081 4.45401L13.954 5.18184C14.3027 5.63889 14.8697 5.87376 15.4394 5.79712L15.2795 4.60783ZM16.2179 3.91676C15.8909 4.18436 15.6728 4.36217 15.5021 4.48084C15.3265 4.60283 15.2736 4.60863 15.2795 4.60783L15.4394 5.79712C15.726 5.75857 15.973 5.61488 16.1869 5.46624C16.4056 5.31427 16.6664 5.10029 16.9778 4.8455L16.2179 3.91676ZM17.1027 3.33764C16.9289 3.39316 16.7839 3.48071 16.6519 3.57474C16.5248 3.6653 16.3804 3.78381 16.2179 3.91676L16.9778 4.8455C17.1526 4.70247 17.2613 4.61399 17.3482 4.55206C17.4302 4.49361 17.4602 4.48318 17.4679 4.48073L17.1027 3.33764ZM18.2258 3.39365C17.8705 3.23972 17.4715 3.21982 17.1027 3.33764L17.4679 4.48073C17.5601 4.45127 17.6599 4.45625 17.7487 4.49473L18.2258 3.39365ZM19.0486 4.05794C18.9001 3.90948 18.7683 3.7772 18.6508 3.67444C18.5288 3.56775 18.3932 3.4662 18.2258 3.39365L17.7487 4.49473C17.7561 4.49793 17.7849 4.5113 17.8607 4.57763C17.941 4.6479 18.0403 4.74674 18.2 4.90646L19.0486 4.05794ZM19.942 4.9514L19.0486 4.05793L18.2 4.90646L19.0935 5.79993L19.942 4.9514ZM20.6063 5.7742C20.5338 5.60678 20.4322 5.47115 20.3255 5.34918C20.2228 5.23171 20.0905 5.09986 19.942 4.9514L19.0935 5.79993C19.2532 5.95966 19.3521 6.05894 19.4223 6.13927C19.4887 6.2151 19.502 6.24391 19.5052 6.25131L20.6063 5.7742ZM20.6623 6.89722C20.7801 6.52844 20.7602 6.12944 20.6063 5.7742L19.5052 6.2513C19.5437 6.34011 19.5487 6.43986 19.5192 6.53206L20.6623 6.89722ZM20.0832 7.78205C20.2161 7.61955 20.3347 7.47519 20.4252 7.34809C20.5193 7.21611 20.6068 7.07103 20.6623 6.89723L19.5192 6.53206C19.5168 6.53973 19.5064 6.56973 19.4479 6.65178C19.386 6.7387 19.2975 6.84733 19.1545 7.02216L20.0832 7.78205ZM19.3921 8.72054C19.3913 8.72642 19.3971 8.67345 19.5191 8.49791C19.6378 8.32716 19.8156 8.10912 20.0832 7.78204L19.1545 7.02216C18.8997 7.33357 18.6857 7.59441 18.5337 7.81308C18.3851 8.02697 18.2414 8.27398 18.2028 8.56057L19.3921 8.72054ZM19.5459 9.09189C19.4317 9.00473 19.3729 8.86297 19.3921 8.72054L18.2028 8.56057C18.1262 9.13028 18.3611 9.6973 18.8181 10.046L19.5459 9.09189ZM20.6982 9.26683C20.2777 9.22478 19.9978 9.19634 19.7931 9.15951C19.5828 9.12165 19.5412 9.08829 19.5459 9.09189L18.8181 10.046C19.048 10.2214 19.3243 10.2944 19.5806 10.3405C19.8427 10.3877 20.1785 10.4208 20.5788 10.4609L20.6982 9.26683ZM21.7334 9.483C21.5713 9.39935 21.4068 9.35868 21.247 9.33184C21.093 9.306 20.9072 9.28772 20.6982 9.26683L20.5788 10.4609C20.8036 10.4834 20.943 10.4976 21.0483 10.5153C21.1476 10.532 21.1762 10.5458 21.1834 10.5495L21.7334 9.483ZM22.4879 10.3167C22.3456 9.95666 22.0775 9.66046 21.7334 9.483L21.1834 10.5495C21.2694 10.5939 21.3364 10.6679 21.372 10.7579L22.4879 10.3167ZM22.6 11.3682C22.6 11.1583 22.6003 10.9715 22.5899 10.8158C22.5791 10.6541 22.555 10.4864 22.4879 10.3167L21.372 10.7579C21.3749 10.7654 21.3859 10.7952 21.3926 10.8957C21.3997 11.0022 21.4 11.1423 21.4 11.3682H22.6ZM22.6 12.6319V11.3682H21.4V12.6319H22.6ZM22.488 13.6832C22.555 13.5135 22.5791 13.3459 22.5899 13.1842C22.6003 13.0285 22.6 12.8418 22.6 12.6319H21.4C21.4 12.8577 21.3997 12.9978 21.3926 13.1042C21.3859 13.2047 21.375 13.2346 21.372 13.2421L22.488 13.6832ZM21.7333 14.5171C22.0775 14.3396 22.3456 14.0433 22.488 13.6832L21.372 13.2421C21.3364 13.3321 21.2694 13.4062 21.1833 13.4505L21.7333 14.5171ZM20.6983 14.7332C20.9072 14.7123 21.093 14.694 21.2469 14.6682C21.4067 14.6413 21.5712 14.6007 21.7333 14.5171L21.1833 13.4505C21.1762 13.4542 21.1476 13.468 21.0482 13.4847C20.943 13.5024 20.8037 13.5166 20.5789 13.5391L20.6983 14.7332ZM20.7372 14.728L20.7373 14.728L20.54 13.5443L20.54 13.5443L20.7372 14.728ZM19.5464 14.908C19.5416 14.9116 19.5832 14.8783 19.7935 14.8404C19.9981 14.8036 20.2779 14.7752 20.6983 14.7332L20.5789 13.5391C20.1787 13.5791 19.843 13.6123 19.581 13.6594C19.3248 13.7055 19.0486 13.7785 18.8187 13.9538L19.5464 14.908ZM19.3925 15.2795C19.3733 15.137 19.432 14.9952 19.5464 14.908L18.8187 13.9538C18.3614 14.3025 18.1265 14.8698 18.2032 15.4397L19.3925 15.2795ZM20.0834 16.2176C19.8158 15.8907 19.6381 15.6727 19.5195 15.502C19.3975 15.3266 19.3917 15.2736 19.3925 15.2795L18.2032 15.4397C18.2418 15.7262 18.3855 15.9731 18.5341 16.1869C18.686 16.4055 18.8999 16.6662 19.1546 16.9775L20.0834 16.2176ZM20.6623 17.1021C20.6068 16.9284 20.5193 16.7834 20.4253 16.6514C20.3347 16.5244 20.2163 16.3801 20.0834 16.2176L19.1546 16.9775C19.2976 17.1523 19.386 17.2609 19.4479 17.3478C19.5064 17.4298 19.5168 17.4598 19.5193 17.4674L20.6623 17.1021ZM20.6063 18.2256C20.7603 17.8702 20.7802 17.471 20.6623 17.1021L19.5193 17.4674C19.5487 17.5597 19.5438 17.6595 19.5053 17.7483L20.6063 18.2256ZM19.9422 19.048C20.0906 18.8996 20.2228 18.7678 20.3256 18.6504C20.4322 18.5285 20.5337 18.3929 20.6063 18.2256L19.5053 17.7483C19.5021 17.7557 19.4887 17.7845 19.4224 17.8603C19.3521 17.9406 19.2533 18.0398 19.0937 18.1995L19.9422 19.048ZM19.0486 19.9416L19.9422 19.048L19.0937 18.1995L18.2001 19.0931L19.0486 19.9416ZM18.2258 20.6059C18.3932 20.5334 18.5289 20.4318 18.6508 20.3251C18.7683 20.2224 18.9001 20.0901 19.0486 19.9416L18.2001 19.0931C18.0403 19.2528 17.9411 19.3517 17.8607 19.4219C17.7849 19.4883 17.7561 19.5016 17.7487 19.5048L18.2258 20.6059ZM17.1028 20.6619C17.4716 20.7797 17.8706 20.7598 18.2258 20.6059L17.7487 19.5048C17.6599 19.5433 17.5601 19.5483 17.4679 19.5188L17.1028 20.6619ZM16.218 20.0828C16.3805 20.2157 16.5248 20.3343 16.6519 20.4248C16.7839 20.5188 16.929 20.6064 17.1028 20.6619L17.4679 19.5188C17.4603 19.5164 17.4303 19.5059 17.3482 19.4475C17.2613 19.3856 17.1527 19.2971 16.9779 19.1541L16.218 20.0828ZM16.2231 20.0869L16.2231 20.0869L16.9727 19.1499L16.9727 19.1499L16.2231 20.0869ZM15.2795 19.3917C15.2736 19.3909 15.3266 19.3967 15.5021 19.5187C15.6729 19.6374 15.8909 19.8152 16.218 20.0828L16.9778 19.154C16.6664 18.8993 16.4056 18.6853 16.187 18.5333C15.9731 18.3847 15.7261 18.241 15.4395 18.2024L15.2795 19.3917ZM14.9081 19.5455C14.9953 19.4313 15.1371 19.3726 15.2795 19.3917L15.4395 18.2024C14.8698 18.1258 14.3027 18.3607 13.9541 18.8177L14.9081 19.5455ZM14.7332 20.698C14.7752 20.2775 14.8037 19.9975 14.8405 19.7928C14.8784 19.5824 14.9118 19.5408 14.9081 19.5455L13.9541 18.8177C13.7787 19.0476 13.7056 19.3239 13.6595 19.5803C13.6123 19.8424 13.5792 20.1782 13.5391 20.5786L14.7332 20.698ZM14.5169 21.7336C14.6006 21.5714 14.6413 21.4068 14.6682 21.247C14.694 21.093 14.7123 20.907 14.7332 20.698L13.5391 20.5786C13.5167 20.8035 13.5024 20.9429 13.4847 21.0482C13.468 21.1476 13.4542 21.1762 13.4505 21.1834L14.5169 21.7336ZM13.6835 22.4879C14.0434 22.3455 14.3395 22.0775 14.5169 21.7336L13.4505 21.1834C13.4061 21.2694 13.3321 21.3364 13.2421 21.372L13.6835 22.4879ZM12.6316 22.6C12.8416 22.6 13.0285 22.6003 13.1842 22.5899C13.346 22.5791 13.5138 22.555 13.6835 22.4879L13.2421 21.372C13.2346 21.3749 13.2048 21.3859 13.1043 21.3926C12.9977 21.3997 12.8576 21.4 12.6316 21.4V22.6ZM11.3682 22.6H12.6316V21.4H11.3682V22.6ZM10.3167 22.4879C10.4864 22.555 10.6541 22.5791 10.8158 22.5899C10.9715 22.6003 11.1583 22.6 11.3682 22.6V21.4C11.1423 21.4 11.0022 21.3997 10.8957 21.3926C10.7952 21.3859 10.7654 21.3749 10.7579 21.372L10.3167 22.4879ZM9.48299 21.7334C9.66046 22.0775 9.95666 22.3456 10.3167 22.4879L10.7579 21.372C10.6679 21.3364 10.5939 21.2694 10.5495 21.1834L9.48299 21.7334ZM9.26683 20.6983C9.28772 20.9072 9.306 21.0931 9.33184 21.247C9.35868 21.4068 9.39935 21.5713 9.48299 21.7334L10.5495 21.1834C10.5458 21.1762 10.532 21.1476 10.5153 21.0483C10.4976 20.943 10.4834 20.8036 10.4609 20.5788L9.26683 20.6983ZM9.09189 19.5459C9.08829 19.5412 9.12165 19.5828 9.15951 19.7932C9.19634 19.9978 9.22478 20.2777 9.26683 20.6983L10.4609 20.5788C10.4208 20.1785 10.3877 19.8427 10.3405 19.5806C10.2944 19.3243 10.2213 19.048 10.0459 18.8181L9.09189 19.5459ZM8.72055 19.3921C8.86297 19.373 9.00472 19.4317 9.09189 19.5459L10.0459 18.8181C9.6973 18.3611 9.13028 18.1262 8.56059 18.2028L8.72055 19.3921ZM7.78202 20.0832C8.10911 19.8156 8.32715 19.6378 8.49791 19.5191C8.67345 19.3971 8.72643 19.3913 8.72055 19.3921L8.56059 18.2028C8.27399 18.2414 8.02698 18.3851 7.81308 18.5337C7.5944 18.6857 7.33356 18.8997 7.02213 19.1545L7.78202 20.0832ZM7.80068 20.0673L7.80069 20.0673L7.00346 19.1704L7.00344 19.1704L7.80068 20.0673ZM6.89716 20.6624C7.07097 20.6069 7.21605 20.5193 7.34803 20.4253C7.47514 20.3347 7.61951 20.2162 7.782 20.0832L7.02212 19.1545C6.84729 19.2975 6.73866 19.386 6.65173 19.4479C6.56968 19.5064 6.53968 19.5168 6.53201 19.5193L6.89716 20.6624ZM5.77418 20.6064C6.12941 20.7603 6.52838 20.7802 6.89716 20.6624L6.53201 19.5193C6.43981 19.5487 6.34007 19.5438 6.25126 19.5053L5.77418 20.6064ZM4.95134 19.9421C5.09981 20.0905 5.23166 20.2228 5.34913 20.3256C5.47111 20.4323 5.60675 20.5338 5.77418 20.6064L6.25126 19.5053C6.24387 19.5021 6.21506 19.4887 6.13923 19.4224C6.0589 19.3521 5.95961 19.2533 5.79987 19.0935L4.95134 19.9421ZM4.0579 19.0486L4.95134 19.9421L5.79987 19.0935L4.90643 18.2001L4.0579 19.0486ZM3.3936 18.2258C3.46614 18.3932 3.56769 18.5289 3.67439 18.6508C3.77715 18.7683 3.90944 18.9002 4.0579 19.0486L4.90643 18.2001C4.7467 18.0404 4.64785 17.9411 4.57758 17.8607C4.51125 17.7849 4.49788 17.7561 4.49468 17.7487L3.3936 18.2258ZM3.33759 17.1028C3.21978 17.4716 3.23968 17.8706 3.3936 18.2258L4.49468 17.7487C4.4562 17.6599 4.45123 17.5602 4.48068 17.468L3.33759 17.1028ZM3.91673 16.218C3.78378 16.3804 3.66526 16.5248 3.5747 16.6519C3.48067 16.7839 3.39311 16.929 3.33759 17.1028L4.48068 17.468C4.48313 17.4603 4.49356 17.4303 4.55202 17.3482C4.61395 17.2613 4.70243 17.1527 4.84548 16.9778L3.91673 16.218ZM4.60783 15.2795C4.60862 15.2736 4.60283 15.3265 4.48083 15.5021C4.36216 15.6728 4.18434 15.8909 3.91673 16.218L4.84548 16.9778C5.10027 16.6664 5.31426 16.4056 5.46623 16.1869C5.61488 15.973 5.75856 15.726 5.79712 15.4394L4.60783 15.2795ZM4.45401 14.9081C4.56827 14.9953 4.62699 15.137 4.60783 15.2795L5.79712 15.4394C5.87375 14.8697 5.63888 14.3027 5.18184 13.954L4.45401 14.9081ZM3.30173 14.7332C3.72223 14.7752 4.00214 14.8037 4.20679 14.8405C4.41717 14.8783 4.45872 14.9117 4.45401 14.9081L5.18184 13.954C4.95193 13.7786 4.67567 13.7056 4.41932 13.6594C4.15724 13.6123 3.8215 13.5792 3.42113 13.5391L3.30173 14.7332ZM2.26658 14.517C2.42874 14.6007 2.59322 14.6413 2.75304 14.6682C2.90695 14.694 3.09282 14.7123 3.30173 14.7332L3.42113 13.5391C3.19637 13.5166 3.057 13.5024 2.95174 13.4847C2.85239 13.468 2.8238 13.4542 2.81664 13.4505L2.26658 14.517ZM1.51208 13.6833C1.65442 14.0433 1.92249 14.3395 2.26658 14.517L2.81664 13.4505C2.73062 13.4061 2.66361 13.3321 2.62802 13.2421L1.51208 13.6833ZM1.4 12.6318C1.4 12.8417 1.39969 13.0285 1.41009 13.1842C1.42089 13.3459 1.44499 13.5136 1.51208 13.6833L2.62802 13.2421C2.62506 13.2346 2.61414 13.2048 2.60742 13.1042C2.60031 12.9978 2.6 12.8577 2.6 12.6318H1.4ZM1.4 11.3683V12.6318H2.6V11.3683H1.4ZM1.51213 10.3166C1.44501 10.4863 1.4209 10.654 1.41009 10.8158C1.39969 10.9715 1.4 11.1583 1.4 11.3683H2.6C2.6 11.1424 2.60031 11.0023 2.60743 10.8957C2.61414 10.7952 2.62507 10.7654 2.62803 10.7579L1.51213 10.3166ZM2.26644 9.48306C1.92247 9.66051 1.65448 9.95663 1.51213 10.3166L2.62803 10.7579C2.66362 10.6679 2.73062 10.5939 2.81661 10.5495L2.26644 9.48306ZM3.30185 9.26682C3.09289 9.28772 2.90696 9.306 2.75301 9.33185C2.59316 9.35869 2.42863 9.39938 2.26644 9.48306L2.81661 10.5495C2.82377 10.5458 2.85237 10.532 2.95174 10.5153C3.05702 10.4976 3.19643 10.4833 3.42125 10.4609L3.30185 9.26682ZM3.36155 9.26384H3.36155V10.4638H3.36155V9.26384ZM3.36156 9.26384H3.36155V10.4638H3.36156V9.26384ZM4.45443 9.09182C4.45915 9.08823 4.41759 9.1216 4.20716 9.15948C4.00245 9.19632 3.72247 9.22476 3.30186 9.26682L3.42126 10.4609C3.82173 10.4208 4.15756 10.3877 4.41971 10.3405C4.67613 10.2944 4.95246 10.2213 5.1824 10.0458L4.45443 9.09182ZM4.60821 8.72057C4.62734 8.86296 4.56864 9.00467 4.45443 9.09182L5.1824 10.0458C5.63926 9.69717 5.87405 9.13032 5.79752 8.56076L4.60821 8.72057ZM3.9169 7.78176C4.1846 8.10895 4.36248 8.32705 4.48118 8.49786C4.60322 8.67346 4.609 8.72645 4.60821 8.72057L5.79752 8.56076C5.759 8.27408 5.61528 8.027 5.46659 7.81305C5.31458 7.59431 5.10053 7.33339 4.84565 7.02188L3.9169 7.78176ZM3.33757 6.89655C3.39309 7.07044 3.48067 7.21557 3.57473 7.34761C3.66533 7.47477 3.78389 7.6192 3.9169 7.78176L4.84565 7.02188C4.70255 6.84697 4.61403 6.73829 4.55207 6.65133C4.49359 6.56924 4.48316 6.53922 4.48071 6.53155L3.33757 6.89655ZM3.39356 5.77396C3.23975 6.12907 3.21985 6.5279 3.33757 6.89655L4.48071 6.53155C4.45128 6.43939 4.45625 6.33968 4.4947 6.2509L3.39356 5.77396ZM4.05807 4.95082C3.90956 5.09934 3.77721 5.23124 3.67442 5.34875C3.56769 5.47077 3.4661 5.60647 3.39356 5.77396L4.4947 6.2509C4.49791 6.24351 4.51127 6.21468 4.57763 6.13883C4.64792 6.05847 4.74681 5.95914 4.9066 5.79935L4.05807 4.95082ZM4.95139 4.0575L4.05807 4.95082L4.9066 5.79935L5.79992 4.90603L4.95139 4.0575ZM4.95139 4.0575L4.95139 4.0575L5.79992 4.90603L5.79992 4.90603L4.95139 4.0575ZM5.77423 3.39318C5.6068 3.46573 5.47115 3.56728 5.34918 3.67398C5.23171 3.77675 5.09985 3.90904 4.95139 4.0575L5.79992 4.90603C5.95965 4.7463 6.05894 4.64745 6.13928 4.57717C6.2151 4.51084 6.24392 4.49747 6.25131 4.49427L5.77423 3.39318ZM6.8972 3.33717C6.52843 3.21937 6.12945 3.23927 5.77423 3.39318L6.25131 4.49427C6.34011 4.45579 6.43986 4.45082 6.53205 4.48027L6.8972 3.33717ZM7.78214 3.91639C7.61961 3.78341 7.47523 3.66488 7.34811 3.57431C7.21611 3.48027 7.07103 3.3927 6.8972 3.33717L6.53205 4.48027C6.53972 4.48272 6.56972 4.49315 6.65179 4.55163C6.73874 4.61357 6.84739 4.70207 7.02225 4.84514L7.78214 3.91639ZM8.72052 4.60743C8.72641 4.60823 8.67345 4.60243 8.49792 4.48043C8.32719 4.36177 8.10918 4.18397 7.78214 3.91639L7.02225 4.84514C7.33363 5.0999 7.59443 5.31385 7.81306 5.46581C8.0269 5.61443 8.27385 5.75811 8.56036 5.7967L8.72052 4.60743ZM9.09197 4.45358C9.0048 4.56788 8.86299 4.62662 8.72052 4.60743L8.56036 5.7967C9.13024 5.87345 9.69747 5.63849 10.0462 5.18126L9.09197 4.45358ZM9.26685 3.3016C9.22481 3.72199 9.19638 4.00182 9.15957 4.20642C9.12172 4.41674 9.08838 4.45829 9.09197 4.45358L10.0462 5.18126C10.2215 4.95139 10.2945 4.6752 10.3406 4.41892C10.3877 4.15691 10.4209 3.82126 10.4609 3.42101L9.26685 3.3016ZM9.48291 2.26673C9.39931 2.42885 9.35866 2.59329 9.33184 2.75306C9.306 2.90693 9.28773 3.09276 9.26685 3.3016L10.4609 3.42101C10.4834 3.19631 10.4976 3.05697 10.5153 2.95175C10.5319 2.85242 10.5458 2.82384 10.5495 2.81668L9.48291 2.26673ZM10.3169 1.51201C9.9567 1.65437 9.66039 1.92252 9.48291 2.26673L10.5495 2.81668C10.5938 2.73063 10.6679 2.66359 10.758 2.628L10.3169 1.51201ZM11.3681 1.4C11.1582 1.4 10.9715 1.39969 10.8158 1.41008C10.6542 1.42088 10.4865 1.44497 10.3169 1.51201L10.758 2.628C10.7654 2.62504 10.7953 2.61413 10.8958 2.60742C11.0022 2.60031 11.1423 2.6 11.3681 2.6V1.4ZM12.6318 1.4H11.3681V2.6H12.6318V1.4ZM13.6833 1.51208C13.5136 1.44499 13.3459 1.42089 13.1842 1.41009C13.0285 1.39969 12.8417 1.4 12.6318 1.4V2.6C12.8577 2.6 12.9978 2.60031 13.1043 2.60742C13.2048 2.61414 13.2346 2.62506 13.2421 2.62802L13.6833 1.51208ZM14.517 2.26658C14.3395 1.92249 14.0433 1.65443 13.6833 1.51208L13.2421 2.62802C13.3321 2.66361 13.4061 2.73062 13.4505 2.81664L14.517 2.26658ZM15.4 12C15.4 13.8778 13.8778 15.4 12 15.4V16.6C14.5405 16.6 16.6 14.5405 16.6 12H15.4ZM12 8.6C13.8778 8.6 15.4 10.1222 15.4 12H16.6C16.6 9.45949 14.5405 7.4 12 7.4V8.6ZM8.6 12C8.6 10.1222 10.1222 8.6 12 8.6V7.4C9.45949 7.4 7.4 9.45949 7.4 12H8.6ZM12 15.4C10.1222 15.4 8.6 13.8778 8.6 12H7.4C7.4 14.5405 9.45949 16.6 12 16.6V15.4Z'
      fill={color}
    />
  </svg>
)

export const SettingLineLight: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M14.1361 3.36144L14.6337 3.31169L14.1361 3.36144ZM13.9838 2.54161L13.5394 2.7708V2.77081L13.9838 2.54161ZM14.4311 4.81793L14.8286 4.51467V4.51467L14.4311 4.81793ZM15.3595 5.20248L15.2928 4.70694L15.2928 4.70694L15.3595 5.20248ZM16.5979 4.38113L16.9145 4.76811V4.76811L16.5979 4.38113ZM17.2853 3.90918L17.4375 4.38547L17.2853 3.90918ZM17.9872 3.94419L18.186 3.48541V3.48541L17.9872 3.94419ZM18.6243 4.4822L18.2707 4.83575V4.83575L18.6243 4.4822ZM19.5178 5.37567L19.8713 5.02211V5.02211L19.5178 5.37567ZM20.0558 6.01275L20.5146 5.81396L20.5146 5.81396L20.0558 6.01275ZM20.0908 6.71464L20.5671 6.8668L20.5671 6.86679L20.0908 6.71464ZM19.6188 7.4021L19.2318 7.08548V7.08548L19.6188 7.4021ZM18.7975 8.64056L18.3019 8.5739V8.5739L18.7975 8.64056ZM19.182 9.56893L18.8787 9.96645L19.182 9.56893ZM20.6385 9.86385L20.6883 9.36633L20.6385 9.86385ZM21.4584 10.0162L21.6876 9.57187L21.6876 9.57187L21.4584 10.0162ZM21.9299 10.5373L22.3949 10.3534V10.3534L21.9299 10.5373ZM21.93 13.4626L21.465 13.2788L21.465 13.2788L21.93 13.4626ZM21.4583 13.9838L21.6875 14.4282H21.6875L21.4583 13.9838ZM20.6386 14.1361L20.5889 13.6386L20.5726 13.6402L20.5564 13.6429L20.6386 14.1361ZM20.6386 14.1361L20.6884 14.6337L20.7047 14.632L20.7208 14.6293L20.6386 14.1361ZM19.1825 14.4309L18.8794 14.0333L19.1825 14.4309ZM18.7979 15.3596L18.3023 15.4264V15.4264L18.7979 15.3596ZM19.619 16.5976L19.232 16.9142L19.619 16.5976ZM20.0908 17.2848L19.6145 17.437L19.6145 17.437L20.0908 17.2848ZM20.0558 17.9869L19.597 17.7881L19.597 17.7881L20.0558 17.9869ZM19.5179 18.6238L19.8715 18.9773L19.5179 18.6238ZM18.6243 19.5174L18.2708 19.1638V19.1638L18.6243 19.5174ZM17.9873 20.0554L18.1861 20.5141L18.1861 20.5141L17.9873 20.0554ZM17.2854 20.0904L17.1332 20.5667H17.1332L17.2854 20.0904ZM16.5979 19.6184L16.9146 19.2314L16.9103 19.228L16.5979 19.6184ZM16.5979 19.6184L16.2813 20.0054L16.2856 20.0088L16.5979 19.6184ZM15.3595 18.7971L15.4262 18.3015H15.4262L15.3595 18.7971ZM14.4311 19.1816L14.8286 19.4849L14.8286 19.4849L14.4311 19.1816ZM14.1362 20.6383L13.6386 20.5886L14.1362 20.6383ZM13.9837 21.4585L13.5394 21.2292L13.5394 21.2292L13.9837 21.4585ZM13.4628 21.9299L13.2789 21.465H13.2789L13.4628 21.9299ZM10.5373 21.9299L10.7211 21.465H10.7211L10.5373 21.9299ZM10.0162 21.4584L10.4606 21.2292L10.0162 21.4584ZM9.86385 20.6385L9.36634 20.6883L9.86385 20.6385ZM9.56892 19.182L9.17139 19.4853L9.17139 19.4853L9.56892 19.182ZM8.64057 18.7975L8.57392 18.3019H8.57392L8.64057 18.7975ZM7.40208 19.6189L7.08546 19.2319L7.07754 19.2384L7.06989 19.2452L7.40208 19.6189ZM7.40206 19.6189L7.71868 20.0058L7.7266 19.9994L7.73424 19.9926L7.40206 19.6189ZM6.71458 20.0908L6.86673 20.5671H6.86673L6.71458 20.0908ZM6.01272 20.0558L5.81394 20.5146H5.81394L6.01272 20.0558ZM5.37561 19.5178L5.72916 19.1642H5.72916L5.37561 19.5178ZM4.48217 18.6243L4.12861 18.9779H4.12861L4.48217 18.6243ZM3.94414 17.9873L4.40292 17.7885L3.94414 17.9873ZM3.90913 17.2854L4.38542 17.4375L3.90913 17.2854ZM4.3811 16.5979L4.76808 16.9145L4.3811 16.5979ZM5.20247 15.3594L5.69801 15.4261L5.20247 15.3594ZM4.81792 14.4311L5.12119 14.0335H5.12119L4.81792 14.4311ZM3.36143 14.1361L3.31168 14.6337H3.31168L3.36143 14.1361ZM2.54161 13.9838L2.77081 13.5394H2.77081L2.54161 13.9838ZM2.07005 13.4627L1.60507 13.6465H1.60507L2.07005 13.4627ZM2.07008 10.5372L1.60513 10.3533L1.60513 10.3533L2.07008 10.5372ZM2.54152 10.0163L2.31229 9.57193L2.31228 9.57193L2.54152 10.0163ZM3.36155 9.86384V9.36384H3.33661L3.3118 9.36633L3.36155 9.86384ZM3.36156 9.86384V10.3638H3.3865L3.41131 10.3614L3.36156 9.86384ZM4.81842 9.56881L4.5151 9.17132L4.51509 9.17132L4.81842 9.56881ZM5.20287 8.64066L5.69841 8.57408H5.69841L5.20287 8.64066ZM4.38128 7.40182L4.76826 7.0852L4.38128 7.40182ZM3.90914 6.71405L4.38545 6.56197H4.38544L3.90914 6.71405ZM3.94413 6.01243L3.48532 5.81371L3.48532 5.81371L3.94413 6.01243ZM4.48233 5.37509L4.83589 5.72864L4.83589 5.72864L4.48233 5.37509ZM5.37565 4.48177L5.0221 4.12822H5.0221L5.37565 4.48177ZM6.01277 3.94373L5.81398 3.48494H5.81398L6.01277 3.94373ZM6.71463 3.90872L6.86677 3.43243L6.71463 3.90872ZM7.4022 4.38076L7.71882 3.99378V3.99378L7.4022 4.38076ZM8.64044 5.20207L8.70718 4.70654L8.64044 5.20207ZM9.56907 4.81742L9.17149 4.51422L9.56907 4.81742ZM9.86387 3.36131L10.3614 3.41106V3.41106L9.86387 3.36131ZM10.0162 2.5417L9.57179 2.31255L9.57179 2.31256L10.0162 2.5417ZM10.5374 2.07001L10.7212 2.535L10.7212 2.535L10.5374 2.07001ZM13.4627 2.07005L13.6465 1.60507L13.6465 1.60507L13.4627 2.07005ZM14.6337 3.31169C14.6126 3.10146 14.5947 2.91945 14.5695 2.7696C14.5435 2.61482 14.5051 2.46166 14.4281 2.31242L13.5394 2.77081C13.5497 2.79088 13.5658 2.8308 13.5833 2.93519C13.6017 3.04449 13.6163 3.18775 13.6386 3.41119L14.6337 3.31169ZM14.8286 4.51467C14.8173 4.49983 14.7806 4.43872 14.7421 4.22451C14.7044 4.01507 14.6755 3.73051 14.6337 3.31169L13.6386 3.41119C13.6788 3.81323 13.7116 4.14432 13.7579 4.40161C13.8033 4.65413 13.8731 4.91083 14.0335 5.12119L14.8286 4.51467ZM15.2928 4.70694C15.1148 4.73089 14.9375 4.65749 14.8286 4.51467L14.0335 5.12118C14.3604 5.54967 14.892 5.76987 15.4261 5.69801L15.2928 4.70694ZM16.2813 3.99415C15.9555 4.26069 15.7339 4.44152 15.5592 4.56296C15.3804 4.68717 15.3113 4.70445 15.2928 4.70694L15.4261 5.69801C15.6883 5.66274 15.9192 5.53055 16.1298 5.38412C16.3445 5.23493 16.6018 5.02396 16.9145 4.76811L16.2813 3.99415ZM17.1332 3.4329C16.9732 3.484 16.8377 3.56512 16.7099 3.65619C16.5861 3.74436 16.4448 3.86037 16.2813 3.99415L16.9145 4.76811C17.0883 4.62591 17.1999 4.53493 17.2902 4.47062C17.3764 4.4092 17.416 4.39234 17.4375 4.38547L17.1332 3.4329ZM18.186 3.48541C17.853 3.3411 17.4789 3.32244 17.1332 3.4329L17.4375 4.38547C17.5527 4.34865 17.6774 4.35487 17.7884 4.40297L18.186 3.48541ZM18.9778 4.12865C18.8285 3.97925 18.6993 3.84975 18.5849 3.74971C18.4668 3.64638 18.3401 3.55217 18.186 3.48541L17.7884 4.40297C17.8092 4.41195 17.8469 4.43267 17.9265 4.50236C18.01 4.57534 18.112 4.67697 18.2707 4.83575L18.9778 4.12865ZM19.8713 5.02211L18.9778 4.12865L18.2707 4.83575L19.1642 5.72922L19.8713 5.02211ZM20.5146 5.81396C20.4478 5.65988 20.3536 5.53314 20.2503 5.41502C20.1502 5.30065 20.0207 5.17151 19.8713 5.02211L19.1642 5.72922C19.323 5.88801 19.4246 5.99001 19.4976 6.07343C19.5673 6.1531 19.588 6.19082 19.597 6.21155L20.5146 5.81396ZM20.5671 6.86679C20.6775 6.52106 20.6589 6.147 20.5146 5.81396L19.597 6.21154C19.6451 6.32255 19.6513 6.44724 19.6145 6.56249L20.5671 6.86679ZM20.0058 7.71872C20.1396 7.5552 20.2556 7.41382 20.3438 7.29006C20.4348 7.16224 20.516 7.02676 20.5671 6.8668L19.6145 6.56249C19.6076 6.58401 19.5908 6.62359 19.5293 6.7098C19.465 6.80008 19.374 6.91168 19.2318 7.08548L20.0058 7.71872ZM19.293 8.70721C19.2955 8.68872 19.3128 8.61958 19.437 8.44084C19.5584 8.2661 19.7393 8.0445 20.0058 7.71872L19.2318 7.08548C18.976 7.3982 18.765 7.65547 18.6158 7.87015C18.4694 8.08084 18.3372 8.31168 18.3019 8.5739L19.293 8.70721ZM19.4853 9.1714C19.3424 9.06244 19.2691 8.88524 19.293 8.70721L18.3019 8.5739C18.2301 9.108 18.4503 9.63959 18.8787 9.96645L19.4853 9.1714ZM20.6883 9.36633C20.2694 9.32445 19.9849 9.29562 19.7754 9.25793C19.5612 9.21938 19.5001 9.18271 19.4853 9.1714L18.8787 9.96645C19.0891 10.1269 19.3458 10.1967 19.5983 10.2421C19.8556 10.2884 20.1867 10.3212 20.5888 10.3614L20.6883 9.36633ZM21.6876 9.57187C21.5384 9.49489 21.3852 9.45645 21.2304 9.43046C21.0805 9.4053 20.8985 9.38736 20.6883 9.36633L20.5888 10.3614C20.8122 10.3837 20.9555 10.3983 21.0648 10.4167C21.1692 10.4342 21.2091 10.4503 21.2292 10.4606L21.6876 9.57187ZM22.3949 10.3534C22.2615 10.0159 22.0102 9.73825 21.6876 9.57187L21.2292 10.4606C21.3367 10.5161 21.4205 10.6086 21.465 10.7211L22.3949 10.3534ZM22.5 11.3682C22.5 11.157 22.5003 10.9741 22.4901 10.8224C22.4797 10.6658 22.4567 10.5096 22.3949 10.3534L21.465 10.7211C21.4733 10.7421 21.4853 10.7835 21.4924 10.8891C21.4997 10.9997 21.5 11.1437 21.5 11.3682H22.5ZM22.5 12.6319V11.3682H21.5V12.6319H22.5ZM22.395 13.6464C22.4567 13.4903 22.4797 13.3341 22.4901 13.1775C22.5003 13.026 22.5 12.8431 22.5 12.6319H21.5C21.5 12.8564 21.4997 13.0003 21.4924 13.1109C21.4853 13.2165 21.4733 13.2578 21.465 13.2788L22.395 13.6464ZM21.6875 14.4282C22.0101 14.2618 22.2615 13.984 22.395 13.6464L21.465 13.2788C21.4205 13.3914 21.3367 13.4839 21.2292 13.5394L21.6875 14.4282ZM20.6884 14.6337C20.8986 14.6126 21.0805 14.5947 21.2304 14.5695C21.3851 14.5436 21.5383 14.5051 21.6875 14.4282L21.2292 13.5394C21.2091 13.5498 21.1692 13.5658 21.0648 13.5833C20.9555 13.6017 20.8123 13.6163 20.5889 13.6386L20.6884 14.6337ZM20.7208 14.6293L20.7208 14.6293L20.5564 13.6429L20.5564 13.6429L20.7208 14.6293ZM19.4857 14.8285C19.5006 14.8172 19.5617 14.7805 19.7758 14.742C19.9852 14.7043 20.2697 14.6755 20.6884 14.6337L20.5889 13.6386C20.1869 13.6788 19.856 13.7115 19.5987 13.7578C19.3463 13.8032 19.0897 13.8729 18.8794 14.0333L19.4857 14.8285ZM19.2934 15.2929C19.2694 15.1148 19.3428 14.9375 19.4857 14.8285L18.8794 14.0333C18.4507 14.3602 18.2304 14.8921 18.3023 15.4264L19.2934 15.2929ZM20.006 16.281C19.7395 15.9553 19.5588 15.7338 19.4373 15.5591C19.3132 15.3805 19.2959 15.3113 19.2934 15.2929L18.3023 15.4264C18.3377 15.6885 18.4698 15.9192 18.6162 16.1298C18.7653 16.3444 18.9762 16.6016 19.232 16.9142L20.006 16.281ZM20.5671 17.1326C20.5159 16.9727 20.4348 16.8372 20.3438 16.7095C20.2557 16.5858 20.1397 16.4444 20.006 16.281L19.232 16.9142C19.3741 17.0879 19.4651 17.1995 19.5294 17.2897C19.5908 17.3759 19.6076 17.4155 19.6145 17.437L20.5671 17.1326ZM20.5145 18.1858C20.6589 17.8526 20.6776 17.4784 20.5671 17.1326L19.6145 17.437C19.6514 17.5523 19.6451 17.677 19.597 17.7881L20.5145 18.1858ZM19.8715 18.9773C20.0208 18.828 20.1503 18.6989 20.2503 18.5846C20.3536 18.4665 20.4478 18.3398 20.5145 18.1858L19.597 17.7881C19.588 17.8088 19.5673 17.8465 19.4976 17.9261C19.4247 18.0095 19.3231 18.1115 19.1644 18.2702L19.8715 18.9773ZM18.9779 19.8709L19.8715 18.9773L19.1644 18.2702L18.2708 19.1638L18.9779 19.8709ZM18.1861 20.5141C18.3401 20.4474 18.4669 20.3532 18.585 20.2498C18.6994 20.1498 18.8285 20.0203 18.9779 19.8709L18.2708 19.1638C18.112 19.3226 18.01 19.4242 17.9266 19.4972C17.8469 19.5669 17.8092 19.5876 17.7885 19.5966L18.1861 20.5141ZM17.1332 20.5667C17.4789 20.6771 17.853 20.6585 18.1861 20.5141L17.7885 19.5966C17.6775 19.6447 17.5528 19.6509 17.4375 19.6141L17.1332 20.5667ZM16.2813 20.0054C16.4448 20.1392 16.5862 20.2552 16.7099 20.3434C16.8378 20.4344 16.9732 20.5156 17.1332 20.5667L17.4375 19.6141C17.416 19.6072 17.3764 19.5904 17.2902 19.5289C17.1999 19.4646 17.0883 19.3736 16.9145 19.2314L16.2813 20.0054ZM16.2856 20.0088L16.2856 20.0089L16.9103 19.228L16.9103 19.228L16.2856 20.0088ZM15.2928 19.2926C15.3113 19.2951 15.3805 19.3124 15.5592 19.4366C15.7339 19.558 15.9555 19.7389 16.2813 20.0054L16.9145 19.2314C16.6018 18.9756 16.3446 18.7646 16.1299 18.6154C15.9192 18.469 15.6884 18.3368 15.4262 18.3015L15.2928 19.2926ZM14.8286 19.4849C14.9376 19.3421 15.1148 19.2687 15.2928 19.2926L15.4262 18.3015C14.892 18.2297 14.3604 18.4499 14.0336 18.8784L14.8286 19.4849ZM14.6337 20.6881C14.6756 20.2692 14.7044 19.9846 14.7421 19.7751C14.7807 19.5608 14.8173 19.4997 14.8286 19.4849L14.0336 18.8784C13.8731 19.0887 13.8033 19.3455 13.7579 19.598C13.7116 19.8553 13.6789 20.1865 13.6386 20.5886L14.6337 20.6881ZM14.4281 21.6877C14.5051 21.5385 14.5435 21.3852 14.5695 21.2304C14.5947 21.0805 14.6127 20.8984 14.6337 20.6881L13.6386 20.5886C13.6163 20.8121 13.6017 20.9554 13.5833 21.0648C13.5658 21.1692 13.5497 21.2092 13.5394 21.2292L14.4281 21.6877ZM13.6467 22.3949C13.9841 22.2614 14.2617 22.0102 14.4281 21.6877L13.5394 21.2292C13.4839 21.3367 13.3914 21.4205 13.2789 21.465L13.6467 22.3949ZM12.6316 22.5C12.843 22.5 13.0259 22.5003 13.1776 22.4901C13.3342 22.4797 13.4905 22.4566 13.6467 22.3949L13.2789 21.465C13.2579 21.4733 13.2166 21.4853 13.1109 21.4924C13.0003 21.4997 12.8563 21.5 12.6316 21.5V22.5ZM11.3682 22.5H12.6316V21.5H11.3682V22.5ZM10.3534 22.3949C10.5096 22.4567 10.6658 22.4797 10.8224 22.4901C10.9741 22.5003 11.157 22.5 11.3682 22.5V21.5C11.1437 21.5 10.9997 21.4997 10.8891 21.4924C10.7835 21.4853 10.7421 21.4733 10.7211 21.465L10.3534 22.3949ZM9.57187 21.6876C9.73824 22.0102 10.0159 22.2615 10.3534 22.3949L10.7211 21.465C10.6086 21.4205 10.5161 21.3367 10.4606 21.2292L9.57187 21.6876ZM9.36634 20.6883C9.38736 20.8985 9.4053 21.0805 9.43046 21.2304C9.45645 21.3852 9.49489 21.5384 9.57187 21.6876L10.4606 21.2292C10.4503 21.2091 10.4342 21.1692 10.4167 21.0648C10.3983 20.9555 10.3837 20.8122 10.3614 20.5888L9.36634 20.6883ZM9.17139 19.4853C9.18271 19.5001 9.21938 19.5612 9.25793 19.7754C9.29562 19.9849 9.32445 20.2695 9.36634 20.6883L10.3614 20.5888C10.3212 20.1867 10.2884 19.8556 10.2421 19.5983C10.1967 19.3458 10.1269 19.0891 9.96644 18.8787L9.17139 19.4853ZM8.70722 19.293C8.88525 19.2691 9.06244 19.3425 9.17139 19.4853L9.96644 18.8787C9.63958 18.4503 9.10801 18.2301 8.57392 18.3019L8.70722 19.293ZM7.71869 20.0058C8.04448 19.7393 8.26609 19.5584 8.44084 19.437C8.61958 19.3128 8.68872 19.2955 8.70722 19.293L8.57392 18.3019C8.3117 18.3372 8.08085 18.4694 7.87015 18.6158C7.65547 18.765 7.39819 18.976 7.08546 19.2319L7.71869 20.0058ZM7.73424 19.9926L7.73426 19.9926L7.06989 19.2452L7.06988 19.2452L7.73424 19.9926ZM6.86673 20.5671C7.0267 20.516 7.16218 20.4349 7.29001 20.3438C7.41377 20.2557 7.55516 20.1396 7.71868 20.0058L7.08544 19.2319C6.91164 19.3741 6.80003 19.4651 6.70976 19.5294C6.62354 19.5908 6.58395 19.6077 6.56244 19.6145L6.86673 20.5671ZM5.81394 20.5146C6.14696 20.6589 6.521 20.6776 6.86673 20.5671L6.56244 19.6145C6.44719 19.6514 6.32251 19.6451 6.21151 19.597L5.81394 20.5146ZM5.02205 19.8713C5.17146 20.0207 5.3006 20.1503 5.41497 20.2503C5.5331 20.3536 5.65985 20.4479 5.81394 20.5146L6.21151 19.597C6.19078 19.5881 6.15306 19.5673 6.07339 19.4977C5.98996 19.4247 5.88796 19.323 5.72916 19.1642L5.02205 19.8713ZM4.12861 18.9779L5.02205 19.8713L5.72916 19.1642L4.83572 18.2708L4.12861 18.9779ZM3.48535 18.186C3.55212 18.3401 3.64632 18.4669 3.74966 18.585C3.84971 18.6994 3.97922 18.8285 4.12861 18.9779L4.83572 18.2708C4.67693 18.112 4.57529 18.01 4.50232 17.9266C4.43262 17.8469 4.4119 17.8092 4.40292 17.7885L3.48535 18.186ZM3.43284 17.1332C3.3224 17.479 3.34106 17.853 3.48535 18.186L4.40292 17.7885C4.35482 17.6775 4.34861 17.5528 4.38542 17.4375L3.43284 17.1332ZM3.99413 16.2813C3.86033 16.4448 3.74432 16.5862 3.65614 16.7099C3.56507 16.8378 3.48395 16.9733 3.43284 17.1332L4.38542 17.4375C4.39229 17.416 4.40915 17.3764 4.47058 17.2902C4.53489 17.1999 4.62588 17.0883 4.76808 16.9145L3.99413 16.2813ZM4.70694 15.2928C4.70445 15.3113 4.68716 15.3804 4.56295 15.5592C4.4415 15.7339 4.26067 15.9555 3.99413 16.2813L4.76808 16.9145C5.02394 16.6018 5.23491 16.3445 5.38411 16.1298C5.53054 15.9192 5.66274 15.6883 5.69801 15.4261L4.70694 15.2928ZM4.51466 14.8286C4.65749 14.9375 4.73088 15.1147 4.70694 15.2928L5.69801 15.4261C5.76986 14.892 5.54966 14.3604 5.12119 14.0335L4.51466 14.8286ZM3.31168 14.6337C3.73051 14.6755 4.01507 14.7044 4.2245 14.7421C4.43871 14.7806 4.49983 14.8173 4.51466 14.8286L5.12119 14.0335C4.91083 13.8731 4.65413 13.8033 4.40161 13.7579C4.14432 13.7116 3.81322 13.6788 3.41118 13.6386L3.31168 14.6337ZM2.31242 14.4281C2.46166 14.5051 2.61482 14.5435 2.7696 14.5695C2.91945 14.5947 3.10145 14.6126 3.31168 14.6337L3.41118 13.6386C3.18774 13.6163 3.04449 13.6017 2.93519 13.5833C2.8308 13.5658 2.79088 13.5497 2.77081 13.5394L2.31242 14.4281ZM1.60507 13.6465C1.73852 13.9841 1.98984 14.2618 2.31242 14.4281L2.77081 13.5394C2.66328 13.4839 2.57951 13.3914 2.53502 13.2789L1.60507 13.6465ZM1.5 12.6318C1.5 12.8431 1.49974 13.0259 1.50987 13.1776C1.52033 13.3341 1.54333 13.4904 1.60507 13.6465L2.53502 13.2789C2.52672 13.2578 2.5147 13.2165 2.50764 13.1109C2.50026 13.0003 2.5 12.8563 2.5 12.6318H1.5ZM1.5 11.3683V12.6318H2.5V11.3683H1.5ZM1.60513 10.3533C1.54335 10.5095 1.52034 10.6658 1.50987 10.8224C1.49974 10.9741 1.5 11.157 1.5 11.3683H2.5C2.5 11.1437 2.50026 10.9997 2.50765 10.8891C2.51471 10.7834 2.52673 10.7421 2.53504 10.7211L1.60513 10.3533ZM2.31228 9.57193C1.98981 9.73829 1.73857 10.0159 1.60513 10.3533L2.53504 10.7211C2.57952 10.6086 2.66327 10.5161 2.77076 10.4606L2.31228 9.57193ZM3.3118 9.36633C3.10152 9.38735 2.91947 9.4053 2.76957 9.43047C2.61476 9.45647 2.46156 9.49492 2.31229 9.57193L2.77076 10.4606C2.79084 10.4503 2.83076 10.4342 2.93518 10.4167C3.04452 10.3983 3.1878 10.3837 3.4113 10.3614L3.3118 9.36633ZM3.36155 9.36384H3.36155V10.3638H3.36155V9.36384ZM3.36156 9.36384H3.36155V10.3638H3.36156V9.36384ZM4.51509 9.17132C4.50025 9.18265 4.43914 9.21933 4.22487 9.25789C4.01538 9.2956 3.73074 9.32443 3.31181 9.36633L3.41131 10.3614C3.81346 10.3211 4.14464 10.2884 4.402 10.2421C4.65458 10.1966 4.91135 10.1268 5.12174 9.9663L4.51509 9.17132ZM4.70732 8.70725C4.73124 8.88524 4.65786 9.06238 4.5151 9.17132L5.12174 9.9663C5.55004 9.63946 5.77016 9.10804 5.69841 8.57408L4.70732 8.70725ZM3.9943 7.71844C4.26093 8.04432 4.44182 8.26599 4.5633 8.4408C4.68756 8.61959 4.70484 8.68875 4.70732 8.70725L5.69841 8.57408C5.66317 8.31178 5.53094 8.08087 5.38448 7.87012C5.23524 7.65537 5.0242 7.39802 4.76826 7.0852L3.9943 7.71844ZM3.43283 6.86614C3.48393 7.02617 3.56508 7.16171 3.65618 7.28959C3.74439 7.4134 3.86045 7.55484 3.9943 7.71844L4.76826 7.0852C4.62599 6.91132 4.53497 6.79966 4.47063 6.70935C4.40918 6.6231 4.39232 6.58349 4.38545 6.56197L3.43283 6.86614ZM3.48532 5.81371C3.34112 6.14663 3.32247 6.52052 3.43283 6.86614L4.38544 6.56197C4.34866 6.44676 4.35488 6.32213 4.40294 6.21116L3.48532 5.81371ZM4.12878 5.02153C3.97933 5.17099 3.84977 5.30018 3.74969 5.41459C3.64632 5.53276 3.55209 5.65955 3.48532 5.81371L4.40294 6.21116C4.41192 6.19042 4.43264 6.15269 4.50236 6.07299C4.57536 5.98953 4.67704 5.88749 4.83589 5.72864L4.12878 5.02153ZM5.0221 4.12822L4.12878 5.02154L4.83589 5.72864L5.72921 4.83532L5.0221 4.12822ZM5.0221 4.12821L5.0221 4.12822L5.72921 4.83532L5.72921 4.83532L5.0221 4.12821ZM5.81398 3.48494C5.65989 3.55171 5.53315 3.64591 5.41502 3.74925C5.30065 3.8493 5.1715 3.97881 5.0221 4.12821L5.72921 4.83532C5.888 4.67653 5.99001 4.57489 6.07343 4.50191C6.15311 4.43221 6.19082 4.41149 6.21155 4.40251L5.81398 3.48494ZM6.86677 3.43243C6.52105 3.32199 6.147 3.34065 5.81398 3.48494L6.21155 4.40251C6.32256 4.35442 6.44724 4.3482 6.56248 4.38501L6.86677 3.43243ZM7.71882 3.99378C7.55526 3.85997 7.41386 3.74394 7.29008 3.65575C7.16225 3.56467 7.02675 3.48354 6.86677 3.43243L6.56248 4.38501C6.58399 4.39188 6.62359 4.40874 6.70982 4.47018C6.80011 4.53451 6.91175 4.62551 7.08558 4.76774L7.71882 3.99378ZM8.70718 4.70654C8.6887 4.70405 8.61957 4.68676 8.44085 4.56255C8.26613 4.44111 8.04455 4.26029 7.71882 3.99378L7.08558 4.76774C7.39826 5.02357 7.6555 5.23451 7.87013 5.38369C8.08078 5.5301 8.31156 5.66229 8.57371 5.69759L8.70718 4.70654ZM9.17149 4.51422C9.06252 4.6571 8.88526 4.73052 8.70718 4.70654L8.57371 5.69759C9.10797 5.76954 9.63975 5.54927 9.96665 5.12062L9.17149 4.51422ZM9.36635 3.31155C9.32448 3.73026 9.29566 4.01474 9.25799 4.22412C9.21945 4.43828 9.1828 4.49938 9.17149 4.51422L9.96665 5.12062C10.127 4.9103 10.1968 4.65367 10.2422 4.40121C10.2885 4.14399 10.3212 3.81299 10.3614 3.41106L9.36635 3.31155ZM9.57179 2.31256C9.49485 2.46176 9.45643 2.61489 9.43046 2.76962C9.4053 2.91943 9.38737 3.10139 9.36635 3.31155L10.3614 3.41106C10.3837 3.18768 10.3983 3.04447 10.4167 2.93519C10.4342 2.83083 10.4502 2.79092 10.4606 2.77085L9.57179 2.31256ZM10.3536 1.60501C10.016 1.73847 9.73818 1.98986 9.57179 2.31255L10.4606 2.77085C10.5161 2.66329 10.6086 2.57949 10.7212 2.535L10.3536 1.60501ZM11.3681 1.5C11.1569 1.5 10.974 1.49974 10.8225 1.50986C10.6659 1.52031 10.5097 1.54331 10.3536 1.60501L10.7212 2.535C10.7422 2.5267 10.7835 2.51469 10.8891 2.50764C10.9997 2.50026 11.1436 2.5 11.3681 2.5V1.5ZM12.6318 1.5H11.3681V2.5H12.6318V1.5ZM13.6465 1.60507C13.4904 1.54333 13.3341 1.52033 13.1776 1.50987C13.0259 1.49974 12.8431 1.5 12.6318 1.5V2.5C12.8563 2.5 13.0003 2.50026 13.1109 2.50764C13.2165 2.5147 13.2578 2.52672 13.2789 2.53502L13.6465 1.60507ZM14.4281 2.31242C14.2618 1.98984 13.9841 1.73852 13.6465 1.60507L13.2789 2.53502C13.3914 2.57951 13.4839 2.66328 13.5394 2.7708L14.4281 2.31242ZM15.5 12C15.5 13.933 13.933 15.5 12 15.5V16.5C14.4853 16.5 16.5 14.4853 16.5 12H15.5ZM12 8.5C13.933 8.5 15.5 10.067 15.5 12H16.5C16.5 9.51472 14.4853 7.5 12 7.5V8.5ZM8.5 12C8.5 10.067 10.067 8.5 12 8.5V7.5C9.51472 7.5 7.5 9.51472 7.5 12H8.5ZM12 15.5C10.067 15.5 8.5 13.933 8.5 12H7.5C7.5 14.4853 9.51472 16.5 12 16.5V15.5Z'
      fill={color}
    />
  </svg>
)

export const InfoLight: React.FC<IconComponentProps> = ({
  size = 24,
  color = 'currentColor',
  sx = {},
  className = '',
}) => (
  <svg
    width={size}
    height={size}
    className={className}
    style={sx}
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <circle cx='12' cy='12' r='9' stroke={color} />
    <path
      d='M12.5 7.5C12.5 7.77614 12.2761 8 12 8C11.7239 8 11.5 7.77614 11.5 7.5C11.5 7.22386 11.7239 7 12 7C12.2761 7 12.5 7.22386 12.5 7.5Z'
      fill={color}
    />
    <path d='M12 17V10' stroke={color} />
  </svg>
)
